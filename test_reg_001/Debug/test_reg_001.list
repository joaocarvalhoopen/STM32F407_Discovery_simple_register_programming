
test_reg_001.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000012e8  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000f0  08001498  08001498  00011498  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001588  08001588  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001588  08001588  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001588  08001588  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001588  08001588  00011588  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800158c  0800158c  0001158c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08001590  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  20000064  080015f4  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000090  080015f4  00020090  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   000021e8  00000000  00000000  0002008e  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000061c  00000000  00000000  00022276  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000128  00000000  00000000  00022898  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000f0  00000000  00000000  000229c0  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002ca9  00000000  00000000  00022ab0  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000130a  00000000  00000000  00025759  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00009da3  00000000  00000000  00026a63  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00030806  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000af8  00000000  00000000  00030884  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000064 	.word	0x20000064
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08001480 	.word	0x08001480

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000068 	.word	0x20000068
 80001ec:	08001480 	.word	0x08001480

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <delay>:

#define DELAY_SEC           0.2
#define ONE_SECOND   4000000


void delay(int maxTime){
 8000290:	b480      	push	{r7}
 8000292:	b085      	sub	sp, #20
 8000294:	af00      	add	r7, sp, #0
 8000296:	6078      	str	r0, [r7, #4]
	int volatile dummy = 0;
 8000298:	2300      	movs	r3, #0
 800029a:	60bb      	str	r3, [r7, #8]
	for(int i=0; i < maxTime; i++){
 800029c:	2300      	movs	r3, #0
 800029e:	60fb      	str	r3, [r7, #12]
 80002a0:	e005      	b.n	80002ae <delay+0x1e>
		dummy++;
 80002a2:	68bb      	ldr	r3, [r7, #8]
 80002a4:	3301      	adds	r3, #1
 80002a6:	60bb      	str	r3, [r7, #8]
	for(int i=0; i < maxTime; i++){
 80002a8:	68fb      	ldr	r3, [r7, #12]
 80002aa:	3301      	adds	r3, #1
 80002ac:	60fb      	str	r3, [r7, #12]
 80002ae:	68fa      	ldr	r2, [r7, #12]
 80002b0:	687b      	ldr	r3, [r7, #4]
 80002b2:	429a      	cmp	r2, r3
 80002b4:	dbf5      	blt.n	80002a2 <delay+0x12>
	}
}
 80002b6:	bf00      	nop
 80002b8:	3714      	adds	r7, #20
 80002ba:	46bd      	mov	sp, r7
 80002bc:	bc80      	pop	{r7}
 80002be:	4770      	bx	lr

080002c0 <getButtonState>:

int getButtonState(){
 80002c0:	b480      	push	{r7}
 80002c2:	b083      	sub	sp, #12
 80002c4:	af00      	add	r7, sp, #0
	uint32_t volatile *pGpioAIdr = (uint32_t *) GPIOA_IDR_ADDR;
 80002c6:	4b0a      	ldr	r3, [pc, #40]	; (80002f0 <getButtonState+0x30>)
 80002c8:	603b      	str	r3, [r7, #0]

	int buttonVal = 0;
 80002ca:	2300      	movs	r3, #0
 80002cc:	607b      	str	r3, [r7, #4]
	// Button read value.
	if (*pGpioAIdr & (1 << 0))
 80002ce:	683b      	ldr	r3, [r7, #0]
 80002d0:	681b      	ldr	r3, [r3, #0]
 80002d2:	f003 0301 	and.w	r3, r3, #1
 80002d6:	2b00      	cmp	r3, #0
 80002d8:	d002      	beq.n	80002e0 <getButtonState+0x20>
	{
		// Button High
		buttonVal = 1;
 80002da:	2301      	movs	r3, #1
 80002dc:	607b      	str	r3, [r7, #4]
 80002de:	e001      	b.n	80002e4 <getButtonState+0x24>
	}
	else
	{
		buttonVal = 0;
 80002e0:	2300      	movs	r3, #0
 80002e2:	607b      	str	r3, [r7, #4]
	}
	return buttonVal;
 80002e4:	687b      	ldr	r3, [r7, #4]
}
 80002e6:	4618      	mov	r0, r3
 80002e8:	370c      	adds	r7, #12
 80002ea:	46bd      	mov	sp, r7
 80002ec:	bc80      	pop	{r7}
 80002ee:	4770      	bx	lr
 80002f0:	40020010 	.word	0x40020010

080002f4 <main>:

int main(void)
{
 80002f4:	b580      	push	{r7, lr}
 80002f6:	b088      	sub	sp, #32
 80002f8:	af00      	add	r7, sp, #0
	int a = 1;
 80002fa:	2301      	movs	r3, #1
 80002fc:	61fb      	str	r3, [r7, #28]
	int b = 1;
 80002fe:	2301      	movs	r3, #1
 8000300:	61bb      	str	r3, [r7, #24]
	int c = 0;
 8000302:	2300      	movs	r3, #0
 8000304:	617b      	str	r3, [r7, #20]

	c = a + b;
 8000306:	69fa      	ldr	r2, [r7, #28]
 8000308:	69bb      	ldr	r3, [r7, #24]
 800030a:	4413      	add	r3, r2
 800030c:	617b      	str	r3, [r7, #20]
	printf("Hello world: %d.\n", c);
 800030e:	6979      	ldr	r1, [r7, #20]
 8000310:	4824      	ldr	r0, [pc, #144]	; (80003a4 <main+0xb0>)
 8000312:	f000 f96f 	bl	80005f4 <iprintf>
	//  LED Verde PD12 OUTPUT

	// Enable do clock do periferico GPIOD no,
    // registo de Enable do RCC peripheral Clock.
	// Reset value: 0x0010 0000   [Em principio não vai ser neessário.]
	uint32_t volatile * pRccAhb1Enr = (uint32_t *) RCC_AHB1_ENR_ADDR;
 8000316:	4b24      	ldr	r3, [pc, #144]	; (80003a8 <main+0xb4>)
 8000318:	613b      	str	r3, [r7, #16]
	*pRccAhb1Enr |= (1 << 3);
 800031a:	693b      	ldr	r3, [r7, #16]
 800031c:	681b      	ldr	r3, [r3, #0]
 800031e:	f043 0208 	orr.w	r2, r3, #8
 8000322:	693b      	ldr	r3, [r7, #16]
 8000324:	601a      	str	r2, [r3, #0]

	// Enable do clock do periferico GPIOA no,
	// registo de Enable do RCC peripheral Clock.
	*pRccAhb1Enr |= (1 << 0);
 8000326:	693b      	ldr	r3, [r7, #16]
 8000328:	681b      	ldr	r3, [r3, #0]
 800032a:	f043 0201 	orr.w	r2, r3, #1
 800032e:	693b      	ldr	r3, [r7, #16]
 8000330:	601a      	str	r2, [r3, #0]

	// LED Verde PD12 OUTPUT
    // Ativar o MODE do porto ficando de OUTPUT.
	uint32_t volatile * pGpioDModer = (uint32_t *) GPIOD_MODER_ADDR;
 8000332:	4b1e      	ldr	r3, [pc, #120]	; (80003ac <main+0xb8>)
 8000334:	60fb      	str	r3, [r7, #12]
	*pGpioDModer &= ~(3 << 24);   // Reset value é 0x0.....0
 8000336:	68fb      	ldr	r3, [r7, #12]
 8000338:	681b      	ldr	r3, [r3, #0]
 800033a:	f023 7240 	bic.w	r2, r3, #50331648	; 0x3000000
 800033e:	68fb      	ldr	r3, [r7, #12]
 8000340:	601a      	str	r2, [r3, #0]
	*pGpioDModer |= (1 << 24);
 8000342:	68fb      	ldr	r3, [r7, #12]
 8000344:	681b      	ldr	r3, [r3, #0]
 8000346:	f043 7280 	orr.w	r2, r3, #16777216	; 0x1000000
 800034a:	68fb      	ldr	r3, [r7, #12]
 800034c:	601a      	str	r2, [r3, #0]

	// Button USER PA0 Input.
	// Ativar o MODE do porto ficando de INPUT.
	uint32_t volatile * pGpioAModer = (uint32_t *) GPIOA_MODER_ADDR;
 800034e:	4b18      	ldr	r3, [pc, #96]	; (80003b0 <main+0xbc>)
 8000350:	60bb      	str	r3, [r7, #8]
	*pGpioAModer &= ~(3 << 0);    // Reset value é GPIOx_MODER_RESET_VALUE
 8000352:	68bb      	ldr	r3, [r7, #8]
 8000354:	681b      	ldr	r3, [r3, #0]
 8000356:	f023 0203 	bic.w	r2, r3, #3
 800035a:	68bb      	ldr	r3, [r7, #8]
 800035c:	601a      	str	r2, [r3, #0]
	GPIO port output data register (GPIOx_ODR) (x = A..I/J/K)
	Address offset: 0x14
	Reset value: 0x0000 0000
    */

	uint32_t volatile * pGpioDOdr = (uint32_t *) GPIOD_ODR_ADDR;
 800035e:	4b15      	ldr	r3, [pc, #84]	; (80003b4 <main+0xc0>)
 8000360:	607b      	str	r3, [r7, #4]

	int maxTime = (int)(ONE_SECOND * DELAY_SEC);
 8000362:	4b15      	ldr	r3, [pc, #84]	; (80003b8 <main+0xc4>)
 8000364:	603b      	str	r3, [r7, #0]
	while(1){
		delay(maxTime);
 8000366:	6838      	ldr	r0, [r7, #0]
 8000368:	f7ff ff92 	bl	8000290 <delay>
	    // LED ON.
		*pGpioDOdr |= (1 << 12);
 800036c:	687b      	ldr	r3, [r7, #4]
 800036e:	681b      	ldr	r3, [r3, #0]
 8000370:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 8000374:	687b      	ldr	r3, [r7, #4]
 8000376:	601a      	str	r2, [r3, #0]

		delay(maxTime);
 8000378:	6838      	ldr	r0, [r7, #0]
 800037a:	f7ff ff89 	bl	8000290 <delay>
		// LED OFF.
     	*pGpioDOdr &= ~(1 << 12);
 800037e:	687b      	ldr	r3, [r7, #4]
 8000380:	681b      	ldr	r3, [r3, #0]
 8000382:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8000386:	687b      	ldr	r3, [r7, #4]
 8000388:	601a      	str	r2, [r3, #0]

     	if (getButtonState())
 800038a:	f7ff ff99 	bl	80002c0 <getButtonState>
 800038e:	4603      	mov	r3, r0
 8000390:	2b00      	cmp	r3, #0
 8000392:	d003      	beq.n	800039c <main+0xa8>
     		printf("User Button State: Pressed. \n");
 8000394:	4809      	ldr	r0, [pc, #36]	; (80003bc <main+0xc8>)
 8000396:	f000 f9a1 	bl	80006dc <puts>
 800039a:	e7e4      	b.n	8000366 <main+0x72>
     	else
     		printf("User Button State: Not pressed. \n");
 800039c:	4808      	ldr	r0, [pc, #32]	; (80003c0 <main+0xcc>)
 800039e:	f000 f99d 	bl	80006dc <puts>
		delay(maxTime);
 80003a2:	e7e0      	b.n	8000366 <main+0x72>
 80003a4:	08001498 	.word	0x08001498
 80003a8:	40023830 	.word	0x40023830
 80003ac:	40020c00 	.word	0x40020c00
 80003b0:	40020000 	.word	0x40020000
 80003b4:	40020c14 	.word	0x40020c14
 80003b8:	000c3500 	.word	0x000c3500
 80003bc:	080014ac 	.word	0x080014ac
 80003c0:	080014cc 	.word	0x080014cc

080003c4 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80003c4:	b480      	push	{r7}
 80003c6:	b083      	sub	sp, #12
 80003c8:	af00      	add	r7, sp, #0
 80003ca:	4603      	mov	r3, r0
 80003cc:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80003ce:	4b0e      	ldr	r3, [pc, #56]	; (8000408 <ITM_SendChar+0x44>)
 80003d0:	681b      	ldr	r3, [r3, #0]
 80003d2:	4a0d      	ldr	r2, [pc, #52]	; (8000408 <ITM_SendChar+0x44>)
 80003d4:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80003d8:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80003da:	4b0c      	ldr	r3, [pc, #48]	; (800040c <ITM_SendChar+0x48>)
 80003dc:	681b      	ldr	r3, [r3, #0]
 80003de:	4a0b      	ldr	r2, [pc, #44]	; (800040c <ITM_SendChar+0x48>)
 80003e0:	f043 0301 	orr.w	r3, r3, #1
 80003e4:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80003e6:	bf00      	nop
 80003e8:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80003ec:	681b      	ldr	r3, [r3, #0]
 80003ee:	f003 0301 	and.w	r3, r3, #1
 80003f2:	2b00      	cmp	r3, #0
 80003f4:	d0f8      	beq.n	80003e8 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80003f6:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80003fa:	79fb      	ldrb	r3, [r7, #7]
 80003fc:	6013      	str	r3, [r2, #0]
}
 80003fe:	bf00      	nop
 8000400:	370c      	adds	r7, #12
 8000402:	46bd      	mov	sp, r7
 8000404:	bc80      	pop	{r7}
 8000406:	4770      	bx	lr
 8000408:	e000edfc 	.word	0xe000edfc
 800040c:	e0000e00 	.word	0xe0000e00

08000410 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000410:	b580      	push	{r7, lr}
 8000412:	b086      	sub	sp, #24
 8000414:	af00      	add	r7, sp, #0
 8000416:	60f8      	str	r0, [r7, #12]
 8000418:	60b9      	str	r1, [r7, #8]
 800041a:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800041c:	2300      	movs	r3, #0
 800041e:	617b      	str	r3, [r7, #20]
 8000420:	e00a      	b.n	8000438 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000422:	f3af 8000 	nop.w
 8000426:	4601      	mov	r1, r0
 8000428:	68bb      	ldr	r3, [r7, #8]
 800042a:	1c5a      	adds	r2, r3, #1
 800042c:	60ba      	str	r2, [r7, #8]
 800042e:	b2ca      	uxtb	r2, r1
 8000430:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000432:	697b      	ldr	r3, [r7, #20]
 8000434:	3301      	adds	r3, #1
 8000436:	617b      	str	r3, [r7, #20]
 8000438:	697a      	ldr	r2, [r7, #20]
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	429a      	cmp	r2, r3
 800043e:	dbf0      	blt.n	8000422 <_read+0x12>
	}

return len;
 8000440:	687b      	ldr	r3, [r7, #4]
}
 8000442:	4618      	mov	r0, r3
 8000444:	3718      	adds	r7, #24
 8000446:	46bd      	mov	sp, r7
 8000448:	bd80      	pop	{r7, pc}

0800044a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800044a:	b580      	push	{r7, lr}
 800044c:	b086      	sub	sp, #24
 800044e:	af00      	add	r7, sp, #0
 8000450:	60f8      	str	r0, [r7, #12]
 8000452:	60b9      	str	r1, [r7, #8]
 8000454:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000456:	2300      	movs	r3, #0
 8000458:	617b      	str	r3, [r7, #20]
 800045a:	e009      	b.n	8000470 <_write+0x26>
	{
		// JNC commented.
		//__io_putchar(*ptr++);

		// JNC passa a escrever caracter a caracter para o ITM.
		ITM_SendChar(*ptr++);
 800045c:	68bb      	ldr	r3, [r7, #8]
 800045e:	1c5a      	adds	r2, r3, #1
 8000460:	60ba      	str	r2, [r7, #8]
 8000462:	781b      	ldrb	r3, [r3, #0]
 8000464:	4618      	mov	r0, r3
 8000466:	f7ff ffad 	bl	80003c4 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800046a:	697b      	ldr	r3, [r7, #20]
 800046c:	3301      	adds	r3, #1
 800046e:	617b      	str	r3, [r7, #20]
 8000470:	697a      	ldr	r2, [r7, #20]
 8000472:	687b      	ldr	r3, [r7, #4]
 8000474:	429a      	cmp	r2, r3
 8000476:	dbf1      	blt.n	800045c <_write+0x12>
	}
	return len;
 8000478:	687b      	ldr	r3, [r7, #4]
}
 800047a:	4618      	mov	r0, r3
 800047c:	3718      	adds	r7, #24
 800047e:	46bd      	mov	sp, r7
 8000480:	bd80      	pop	{r7, pc}

08000482 <_close>:

int _close(int file)
{
 8000482:	b480      	push	{r7}
 8000484:	b083      	sub	sp, #12
 8000486:	af00      	add	r7, sp, #0
 8000488:	6078      	str	r0, [r7, #4]
	return -1;
 800048a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800048e:	4618      	mov	r0, r3
 8000490:	370c      	adds	r7, #12
 8000492:	46bd      	mov	sp, r7
 8000494:	bc80      	pop	{r7}
 8000496:	4770      	bx	lr

08000498 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000498:	b480      	push	{r7}
 800049a:	b083      	sub	sp, #12
 800049c:	af00      	add	r7, sp, #0
 800049e:	6078      	str	r0, [r7, #4]
 80004a0:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80004a2:	683b      	ldr	r3, [r7, #0]
 80004a4:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80004a8:	605a      	str	r2, [r3, #4]
	return 0;
 80004aa:	2300      	movs	r3, #0
}
 80004ac:	4618      	mov	r0, r3
 80004ae:	370c      	adds	r7, #12
 80004b0:	46bd      	mov	sp, r7
 80004b2:	bc80      	pop	{r7}
 80004b4:	4770      	bx	lr

080004b6 <_isatty>:

int _isatty(int file)
{
 80004b6:	b480      	push	{r7}
 80004b8:	b083      	sub	sp, #12
 80004ba:	af00      	add	r7, sp, #0
 80004bc:	6078      	str	r0, [r7, #4]
	return 1;
 80004be:	2301      	movs	r3, #1
}
 80004c0:	4618      	mov	r0, r3
 80004c2:	370c      	adds	r7, #12
 80004c4:	46bd      	mov	sp, r7
 80004c6:	bc80      	pop	{r7}
 80004c8:	4770      	bx	lr

080004ca <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80004ca:	b480      	push	{r7}
 80004cc:	b085      	sub	sp, #20
 80004ce:	af00      	add	r7, sp, #0
 80004d0:	60f8      	str	r0, [r7, #12]
 80004d2:	60b9      	str	r1, [r7, #8]
 80004d4:	607a      	str	r2, [r7, #4]
	return 0;
 80004d6:	2300      	movs	r3, #0
}
 80004d8:	4618      	mov	r0, r3
 80004da:	3714      	adds	r7, #20
 80004dc:	46bd      	mov	sp, r7
 80004de:	bc80      	pop	{r7}
 80004e0:	4770      	bx	lr
	...

080004e4 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 80004e4:	b580      	push	{r7, lr}
 80004e6:	b084      	sub	sp, #16
 80004e8:	af00      	add	r7, sp, #0
 80004ea:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80004ec:	4b11      	ldr	r3, [pc, #68]	; (8000534 <_sbrk+0x50>)
 80004ee:	681b      	ldr	r3, [r3, #0]
 80004f0:	2b00      	cmp	r3, #0
 80004f2:	d102      	bne.n	80004fa <_sbrk+0x16>
		heap_end = &end;
 80004f4:	4b0f      	ldr	r3, [pc, #60]	; (8000534 <_sbrk+0x50>)
 80004f6:	4a10      	ldr	r2, [pc, #64]	; (8000538 <_sbrk+0x54>)
 80004f8:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 80004fa:	4b0e      	ldr	r3, [pc, #56]	; (8000534 <_sbrk+0x50>)
 80004fc:	681b      	ldr	r3, [r3, #0]
 80004fe:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 8000500:	4b0c      	ldr	r3, [pc, #48]	; (8000534 <_sbrk+0x50>)
 8000502:	681a      	ldr	r2, [r3, #0]
 8000504:	687b      	ldr	r3, [r7, #4]
 8000506:	4413      	add	r3, r2
 8000508:	466a      	mov	r2, sp
 800050a:	4293      	cmp	r3, r2
 800050c:	d907      	bls.n	800051e <_sbrk+0x3a>
	{
		errno = ENOMEM;
 800050e:	f000 f83f 	bl	8000590 <__errno>
 8000512:	4602      	mov	r2, r0
 8000514:	230c      	movs	r3, #12
 8000516:	6013      	str	r3, [r2, #0]
		return (caddr_t) -1;
 8000518:	f04f 33ff 	mov.w	r3, #4294967295
 800051c:	e006      	b.n	800052c <_sbrk+0x48>
	}

	heap_end += incr;
 800051e:	4b05      	ldr	r3, [pc, #20]	; (8000534 <_sbrk+0x50>)
 8000520:	681a      	ldr	r2, [r3, #0]
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	4413      	add	r3, r2
 8000526:	4a03      	ldr	r2, [pc, #12]	; (8000534 <_sbrk+0x50>)
 8000528:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 800052a:	68fb      	ldr	r3, [r7, #12]
}
 800052c:	4618      	mov	r0, r3
 800052e:	3710      	adds	r7, #16
 8000530:	46bd      	mov	sp, r7
 8000532:	bd80      	pop	{r7, pc}
 8000534:	20000080 	.word	0x20000080
 8000538:	20000090 	.word	0x20000090

0800053c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800053c:	480d      	ldr	r0, [pc, #52]	; (8000574 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800053e:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000540:	480d      	ldr	r0, [pc, #52]	; (8000578 <LoopForever+0x6>)
  ldr r1, =_edata
 8000542:	490e      	ldr	r1, [pc, #56]	; (800057c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000544:	4a0e      	ldr	r2, [pc, #56]	; (8000580 <LoopForever+0xe>)
  movs r3, #0
 8000546:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000548:	e002      	b.n	8000550 <LoopCopyDataInit>

0800054a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800054a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800054c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800054e:	3304      	adds	r3, #4

08000550 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000550:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000552:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000554:	d3f9      	bcc.n	800054a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000556:	4a0b      	ldr	r2, [pc, #44]	; (8000584 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000558:	4c0b      	ldr	r4, [pc, #44]	; (8000588 <LoopForever+0x16>)
  movs r3, #0
 800055a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800055c:	e001      	b.n	8000562 <LoopFillZerobss>

0800055e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800055e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000560:	3204      	adds	r2, #4

08000562 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000562:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000564:	d3fb      	bcc.n	800055e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000566:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 800056a:	f000 f817 	bl	800059c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800056e:	f7ff fec1 	bl	80002f4 <main>

08000572 <LoopForever>:

LoopForever:
    b LoopForever
 8000572:	e7fe      	b.n	8000572 <LoopForever>
  ldr   r0, =_estack
 8000574:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000578:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800057c:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000580:	08001590 	.word	0x08001590
  ldr r2, =_sbss
 8000584:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000588:	20000090 	.word	0x20000090

0800058c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800058c:	e7fe      	b.n	800058c <ADC_IRQHandler>
	...

08000590 <__errno>:
 8000590:	4b01      	ldr	r3, [pc, #4]	; (8000598 <__errno+0x8>)
 8000592:	6818      	ldr	r0, [r3, #0]
 8000594:	4770      	bx	lr
 8000596:	bf00      	nop
 8000598:	20000000 	.word	0x20000000

0800059c <__libc_init_array>:
 800059c:	b570      	push	{r4, r5, r6, lr}
 800059e:	4e0d      	ldr	r6, [pc, #52]	; (80005d4 <__libc_init_array+0x38>)
 80005a0:	4c0d      	ldr	r4, [pc, #52]	; (80005d8 <__libc_init_array+0x3c>)
 80005a2:	1ba4      	subs	r4, r4, r6
 80005a4:	10a4      	asrs	r4, r4, #2
 80005a6:	2500      	movs	r5, #0
 80005a8:	42a5      	cmp	r5, r4
 80005aa:	d109      	bne.n	80005c0 <__libc_init_array+0x24>
 80005ac:	4e0b      	ldr	r6, [pc, #44]	; (80005dc <__libc_init_array+0x40>)
 80005ae:	4c0c      	ldr	r4, [pc, #48]	; (80005e0 <__libc_init_array+0x44>)
 80005b0:	f000 ff66 	bl	8001480 <_init>
 80005b4:	1ba4      	subs	r4, r4, r6
 80005b6:	10a4      	asrs	r4, r4, #2
 80005b8:	2500      	movs	r5, #0
 80005ba:	42a5      	cmp	r5, r4
 80005bc:	d105      	bne.n	80005ca <__libc_init_array+0x2e>
 80005be:	bd70      	pop	{r4, r5, r6, pc}
 80005c0:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80005c4:	4798      	blx	r3
 80005c6:	3501      	adds	r5, #1
 80005c8:	e7ee      	b.n	80005a8 <__libc_init_array+0xc>
 80005ca:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80005ce:	4798      	blx	r3
 80005d0:	3501      	adds	r5, #1
 80005d2:	e7f2      	b.n	80005ba <__libc_init_array+0x1e>
 80005d4:	08001588 	.word	0x08001588
 80005d8:	08001588 	.word	0x08001588
 80005dc:	08001588 	.word	0x08001588
 80005e0:	0800158c 	.word	0x0800158c

080005e4 <memset>:
 80005e4:	4402      	add	r2, r0
 80005e6:	4603      	mov	r3, r0
 80005e8:	4293      	cmp	r3, r2
 80005ea:	d100      	bne.n	80005ee <memset+0xa>
 80005ec:	4770      	bx	lr
 80005ee:	f803 1b01 	strb.w	r1, [r3], #1
 80005f2:	e7f9      	b.n	80005e8 <memset+0x4>

080005f4 <iprintf>:
 80005f4:	b40f      	push	{r0, r1, r2, r3}
 80005f6:	4b0a      	ldr	r3, [pc, #40]	; (8000620 <iprintf+0x2c>)
 80005f8:	b513      	push	{r0, r1, r4, lr}
 80005fa:	681c      	ldr	r4, [r3, #0]
 80005fc:	b124      	cbz	r4, 8000608 <iprintf+0x14>
 80005fe:	69a3      	ldr	r3, [r4, #24]
 8000600:	b913      	cbnz	r3, 8000608 <iprintf+0x14>
 8000602:	4620      	mov	r0, r4
 8000604:	f000 fa22 	bl	8000a4c <__sinit>
 8000608:	ab05      	add	r3, sp, #20
 800060a:	9a04      	ldr	r2, [sp, #16]
 800060c:	68a1      	ldr	r1, [r4, #8]
 800060e:	9301      	str	r3, [sp, #4]
 8000610:	4620      	mov	r0, r4
 8000612:	f000 fbd9 	bl	8000dc8 <_vfiprintf_r>
 8000616:	b002      	add	sp, #8
 8000618:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800061c:	b004      	add	sp, #16
 800061e:	4770      	bx	lr
 8000620:	20000000 	.word	0x20000000

08000624 <_puts_r>:
 8000624:	b570      	push	{r4, r5, r6, lr}
 8000626:	460e      	mov	r6, r1
 8000628:	4605      	mov	r5, r0
 800062a:	b118      	cbz	r0, 8000634 <_puts_r+0x10>
 800062c:	6983      	ldr	r3, [r0, #24]
 800062e:	b90b      	cbnz	r3, 8000634 <_puts_r+0x10>
 8000630:	f000 fa0c 	bl	8000a4c <__sinit>
 8000634:	69ab      	ldr	r3, [r5, #24]
 8000636:	68ac      	ldr	r4, [r5, #8]
 8000638:	b913      	cbnz	r3, 8000640 <_puts_r+0x1c>
 800063a:	4628      	mov	r0, r5
 800063c:	f000 fa06 	bl	8000a4c <__sinit>
 8000640:	4b23      	ldr	r3, [pc, #140]	; (80006d0 <_puts_r+0xac>)
 8000642:	429c      	cmp	r4, r3
 8000644:	d117      	bne.n	8000676 <_puts_r+0x52>
 8000646:	686c      	ldr	r4, [r5, #4]
 8000648:	89a3      	ldrh	r3, [r4, #12]
 800064a:	071b      	lsls	r3, r3, #28
 800064c:	d51d      	bpl.n	800068a <_puts_r+0x66>
 800064e:	6923      	ldr	r3, [r4, #16]
 8000650:	b1db      	cbz	r3, 800068a <_puts_r+0x66>
 8000652:	3e01      	subs	r6, #1
 8000654:	68a3      	ldr	r3, [r4, #8]
 8000656:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800065a:	3b01      	subs	r3, #1
 800065c:	60a3      	str	r3, [r4, #8]
 800065e:	b9e9      	cbnz	r1, 800069c <_puts_r+0x78>
 8000660:	2b00      	cmp	r3, #0
 8000662:	da2e      	bge.n	80006c2 <_puts_r+0x9e>
 8000664:	4622      	mov	r2, r4
 8000666:	210a      	movs	r1, #10
 8000668:	4628      	mov	r0, r5
 800066a:	f000 f83f 	bl	80006ec <__swbuf_r>
 800066e:	3001      	adds	r0, #1
 8000670:	d011      	beq.n	8000696 <_puts_r+0x72>
 8000672:	200a      	movs	r0, #10
 8000674:	e011      	b.n	800069a <_puts_r+0x76>
 8000676:	4b17      	ldr	r3, [pc, #92]	; (80006d4 <_puts_r+0xb0>)
 8000678:	429c      	cmp	r4, r3
 800067a:	d101      	bne.n	8000680 <_puts_r+0x5c>
 800067c:	68ac      	ldr	r4, [r5, #8]
 800067e:	e7e3      	b.n	8000648 <_puts_r+0x24>
 8000680:	4b15      	ldr	r3, [pc, #84]	; (80006d8 <_puts_r+0xb4>)
 8000682:	429c      	cmp	r4, r3
 8000684:	bf08      	it	eq
 8000686:	68ec      	ldreq	r4, [r5, #12]
 8000688:	e7de      	b.n	8000648 <_puts_r+0x24>
 800068a:	4621      	mov	r1, r4
 800068c:	4628      	mov	r0, r5
 800068e:	f000 f87f 	bl	8000790 <__swsetup_r>
 8000692:	2800      	cmp	r0, #0
 8000694:	d0dd      	beq.n	8000652 <_puts_r+0x2e>
 8000696:	f04f 30ff 	mov.w	r0, #4294967295
 800069a:	bd70      	pop	{r4, r5, r6, pc}
 800069c:	2b00      	cmp	r3, #0
 800069e:	da04      	bge.n	80006aa <_puts_r+0x86>
 80006a0:	69a2      	ldr	r2, [r4, #24]
 80006a2:	429a      	cmp	r2, r3
 80006a4:	dc06      	bgt.n	80006b4 <_puts_r+0x90>
 80006a6:	290a      	cmp	r1, #10
 80006a8:	d004      	beq.n	80006b4 <_puts_r+0x90>
 80006aa:	6823      	ldr	r3, [r4, #0]
 80006ac:	1c5a      	adds	r2, r3, #1
 80006ae:	6022      	str	r2, [r4, #0]
 80006b0:	7019      	strb	r1, [r3, #0]
 80006b2:	e7cf      	b.n	8000654 <_puts_r+0x30>
 80006b4:	4622      	mov	r2, r4
 80006b6:	4628      	mov	r0, r5
 80006b8:	f000 f818 	bl	80006ec <__swbuf_r>
 80006bc:	3001      	adds	r0, #1
 80006be:	d1c9      	bne.n	8000654 <_puts_r+0x30>
 80006c0:	e7e9      	b.n	8000696 <_puts_r+0x72>
 80006c2:	6823      	ldr	r3, [r4, #0]
 80006c4:	200a      	movs	r0, #10
 80006c6:	1c5a      	adds	r2, r3, #1
 80006c8:	6022      	str	r2, [r4, #0]
 80006ca:	7018      	strb	r0, [r3, #0]
 80006cc:	e7e5      	b.n	800069a <_puts_r+0x76>
 80006ce:	bf00      	nop
 80006d0:	08001514 	.word	0x08001514
 80006d4:	08001534 	.word	0x08001534
 80006d8:	080014f4 	.word	0x080014f4

080006dc <puts>:
 80006dc:	4b02      	ldr	r3, [pc, #8]	; (80006e8 <puts+0xc>)
 80006de:	4601      	mov	r1, r0
 80006e0:	6818      	ldr	r0, [r3, #0]
 80006e2:	f7ff bf9f 	b.w	8000624 <_puts_r>
 80006e6:	bf00      	nop
 80006e8:	20000000 	.word	0x20000000

080006ec <__swbuf_r>:
 80006ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006ee:	460e      	mov	r6, r1
 80006f0:	4614      	mov	r4, r2
 80006f2:	4605      	mov	r5, r0
 80006f4:	b118      	cbz	r0, 80006fe <__swbuf_r+0x12>
 80006f6:	6983      	ldr	r3, [r0, #24]
 80006f8:	b90b      	cbnz	r3, 80006fe <__swbuf_r+0x12>
 80006fa:	f000 f9a7 	bl	8000a4c <__sinit>
 80006fe:	4b21      	ldr	r3, [pc, #132]	; (8000784 <__swbuf_r+0x98>)
 8000700:	429c      	cmp	r4, r3
 8000702:	d12a      	bne.n	800075a <__swbuf_r+0x6e>
 8000704:	686c      	ldr	r4, [r5, #4]
 8000706:	69a3      	ldr	r3, [r4, #24]
 8000708:	60a3      	str	r3, [r4, #8]
 800070a:	89a3      	ldrh	r3, [r4, #12]
 800070c:	071a      	lsls	r2, r3, #28
 800070e:	d52e      	bpl.n	800076e <__swbuf_r+0x82>
 8000710:	6923      	ldr	r3, [r4, #16]
 8000712:	b363      	cbz	r3, 800076e <__swbuf_r+0x82>
 8000714:	6923      	ldr	r3, [r4, #16]
 8000716:	6820      	ldr	r0, [r4, #0]
 8000718:	1ac0      	subs	r0, r0, r3
 800071a:	6963      	ldr	r3, [r4, #20]
 800071c:	b2f6      	uxtb	r6, r6
 800071e:	4283      	cmp	r3, r0
 8000720:	4637      	mov	r7, r6
 8000722:	dc04      	bgt.n	800072e <__swbuf_r+0x42>
 8000724:	4621      	mov	r1, r4
 8000726:	4628      	mov	r0, r5
 8000728:	f000 f926 	bl	8000978 <_fflush_r>
 800072c:	bb28      	cbnz	r0, 800077a <__swbuf_r+0x8e>
 800072e:	68a3      	ldr	r3, [r4, #8]
 8000730:	3b01      	subs	r3, #1
 8000732:	60a3      	str	r3, [r4, #8]
 8000734:	6823      	ldr	r3, [r4, #0]
 8000736:	1c5a      	adds	r2, r3, #1
 8000738:	6022      	str	r2, [r4, #0]
 800073a:	701e      	strb	r6, [r3, #0]
 800073c:	6963      	ldr	r3, [r4, #20]
 800073e:	3001      	adds	r0, #1
 8000740:	4283      	cmp	r3, r0
 8000742:	d004      	beq.n	800074e <__swbuf_r+0x62>
 8000744:	89a3      	ldrh	r3, [r4, #12]
 8000746:	07db      	lsls	r3, r3, #31
 8000748:	d519      	bpl.n	800077e <__swbuf_r+0x92>
 800074a:	2e0a      	cmp	r6, #10
 800074c:	d117      	bne.n	800077e <__swbuf_r+0x92>
 800074e:	4621      	mov	r1, r4
 8000750:	4628      	mov	r0, r5
 8000752:	f000 f911 	bl	8000978 <_fflush_r>
 8000756:	b190      	cbz	r0, 800077e <__swbuf_r+0x92>
 8000758:	e00f      	b.n	800077a <__swbuf_r+0x8e>
 800075a:	4b0b      	ldr	r3, [pc, #44]	; (8000788 <__swbuf_r+0x9c>)
 800075c:	429c      	cmp	r4, r3
 800075e:	d101      	bne.n	8000764 <__swbuf_r+0x78>
 8000760:	68ac      	ldr	r4, [r5, #8]
 8000762:	e7d0      	b.n	8000706 <__swbuf_r+0x1a>
 8000764:	4b09      	ldr	r3, [pc, #36]	; (800078c <__swbuf_r+0xa0>)
 8000766:	429c      	cmp	r4, r3
 8000768:	bf08      	it	eq
 800076a:	68ec      	ldreq	r4, [r5, #12]
 800076c:	e7cb      	b.n	8000706 <__swbuf_r+0x1a>
 800076e:	4621      	mov	r1, r4
 8000770:	4628      	mov	r0, r5
 8000772:	f000 f80d 	bl	8000790 <__swsetup_r>
 8000776:	2800      	cmp	r0, #0
 8000778:	d0cc      	beq.n	8000714 <__swbuf_r+0x28>
 800077a:	f04f 37ff 	mov.w	r7, #4294967295
 800077e:	4638      	mov	r0, r7
 8000780:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000782:	bf00      	nop
 8000784:	08001514 	.word	0x08001514
 8000788:	08001534 	.word	0x08001534
 800078c:	080014f4 	.word	0x080014f4

08000790 <__swsetup_r>:
 8000790:	4b32      	ldr	r3, [pc, #200]	; (800085c <__swsetup_r+0xcc>)
 8000792:	b570      	push	{r4, r5, r6, lr}
 8000794:	681d      	ldr	r5, [r3, #0]
 8000796:	4606      	mov	r6, r0
 8000798:	460c      	mov	r4, r1
 800079a:	b125      	cbz	r5, 80007a6 <__swsetup_r+0x16>
 800079c:	69ab      	ldr	r3, [r5, #24]
 800079e:	b913      	cbnz	r3, 80007a6 <__swsetup_r+0x16>
 80007a0:	4628      	mov	r0, r5
 80007a2:	f000 f953 	bl	8000a4c <__sinit>
 80007a6:	4b2e      	ldr	r3, [pc, #184]	; (8000860 <__swsetup_r+0xd0>)
 80007a8:	429c      	cmp	r4, r3
 80007aa:	d10f      	bne.n	80007cc <__swsetup_r+0x3c>
 80007ac:	686c      	ldr	r4, [r5, #4]
 80007ae:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80007b2:	b29a      	uxth	r2, r3
 80007b4:	0715      	lsls	r5, r2, #28
 80007b6:	d42c      	bmi.n	8000812 <__swsetup_r+0x82>
 80007b8:	06d0      	lsls	r0, r2, #27
 80007ba:	d411      	bmi.n	80007e0 <__swsetup_r+0x50>
 80007bc:	2209      	movs	r2, #9
 80007be:	6032      	str	r2, [r6, #0]
 80007c0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80007c4:	81a3      	strh	r3, [r4, #12]
 80007c6:	f04f 30ff 	mov.w	r0, #4294967295
 80007ca:	e03e      	b.n	800084a <__swsetup_r+0xba>
 80007cc:	4b25      	ldr	r3, [pc, #148]	; (8000864 <__swsetup_r+0xd4>)
 80007ce:	429c      	cmp	r4, r3
 80007d0:	d101      	bne.n	80007d6 <__swsetup_r+0x46>
 80007d2:	68ac      	ldr	r4, [r5, #8]
 80007d4:	e7eb      	b.n	80007ae <__swsetup_r+0x1e>
 80007d6:	4b24      	ldr	r3, [pc, #144]	; (8000868 <__swsetup_r+0xd8>)
 80007d8:	429c      	cmp	r4, r3
 80007da:	bf08      	it	eq
 80007dc:	68ec      	ldreq	r4, [r5, #12]
 80007de:	e7e6      	b.n	80007ae <__swsetup_r+0x1e>
 80007e0:	0751      	lsls	r1, r2, #29
 80007e2:	d512      	bpl.n	800080a <__swsetup_r+0x7a>
 80007e4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80007e6:	b141      	cbz	r1, 80007fa <__swsetup_r+0x6a>
 80007e8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80007ec:	4299      	cmp	r1, r3
 80007ee:	d002      	beq.n	80007f6 <__swsetup_r+0x66>
 80007f0:	4630      	mov	r0, r6
 80007f2:	f000 fa19 	bl	8000c28 <_free_r>
 80007f6:	2300      	movs	r3, #0
 80007f8:	6363      	str	r3, [r4, #52]	; 0x34
 80007fa:	89a3      	ldrh	r3, [r4, #12]
 80007fc:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000800:	81a3      	strh	r3, [r4, #12]
 8000802:	2300      	movs	r3, #0
 8000804:	6063      	str	r3, [r4, #4]
 8000806:	6923      	ldr	r3, [r4, #16]
 8000808:	6023      	str	r3, [r4, #0]
 800080a:	89a3      	ldrh	r3, [r4, #12]
 800080c:	f043 0308 	orr.w	r3, r3, #8
 8000810:	81a3      	strh	r3, [r4, #12]
 8000812:	6923      	ldr	r3, [r4, #16]
 8000814:	b94b      	cbnz	r3, 800082a <__swsetup_r+0x9a>
 8000816:	89a3      	ldrh	r3, [r4, #12]
 8000818:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800081c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000820:	d003      	beq.n	800082a <__swsetup_r+0x9a>
 8000822:	4621      	mov	r1, r4
 8000824:	4630      	mov	r0, r6
 8000826:	f000 f9bf 	bl	8000ba8 <__smakebuf_r>
 800082a:	89a2      	ldrh	r2, [r4, #12]
 800082c:	f012 0301 	ands.w	r3, r2, #1
 8000830:	d00c      	beq.n	800084c <__swsetup_r+0xbc>
 8000832:	2300      	movs	r3, #0
 8000834:	60a3      	str	r3, [r4, #8]
 8000836:	6963      	ldr	r3, [r4, #20]
 8000838:	425b      	negs	r3, r3
 800083a:	61a3      	str	r3, [r4, #24]
 800083c:	6923      	ldr	r3, [r4, #16]
 800083e:	b953      	cbnz	r3, 8000856 <__swsetup_r+0xc6>
 8000840:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000844:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8000848:	d1ba      	bne.n	80007c0 <__swsetup_r+0x30>
 800084a:	bd70      	pop	{r4, r5, r6, pc}
 800084c:	0792      	lsls	r2, r2, #30
 800084e:	bf58      	it	pl
 8000850:	6963      	ldrpl	r3, [r4, #20]
 8000852:	60a3      	str	r3, [r4, #8]
 8000854:	e7f2      	b.n	800083c <__swsetup_r+0xac>
 8000856:	2000      	movs	r0, #0
 8000858:	e7f7      	b.n	800084a <__swsetup_r+0xba>
 800085a:	bf00      	nop
 800085c:	20000000 	.word	0x20000000
 8000860:	08001514 	.word	0x08001514
 8000864:	08001534 	.word	0x08001534
 8000868:	080014f4 	.word	0x080014f4

0800086c <__sflush_r>:
 800086c:	898a      	ldrh	r2, [r1, #12]
 800086e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000872:	4605      	mov	r5, r0
 8000874:	0710      	lsls	r0, r2, #28
 8000876:	460c      	mov	r4, r1
 8000878:	d458      	bmi.n	800092c <__sflush_r+0xc0>
 800087a:	684b      	ldr	r3, [r1, #4]
 800087c:	2b00      	cmp	r3, #0
 800087e:	dc05      	bgt.n	800088c <__sflush_r+0x20>
 8000880:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000882:	2b00      	cmp	r3, #0
 8000884:	dc02      	bgt.n	800088c <__sflush_r+0x20>
 8000886:	2000      	movs	r0, #0
 8000888:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800088c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800088e:	2e00      	cmp	r6, #0
 8000890:	d0f9      	beq.n	8000886 <__sflush_r+0x1a>
 8000892:	2300      	movs	r3, #0
 8000894:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000898:	682f      	ldr	r7, [r5, #0]
 800089a:	6a21      	ldr	r1, [r4, #32]
 800089c:	602b      	str	r3, [r5, #0]
 800089e:	d032      	beq.n	8000906 <__sflush_r+0x9a>
 80008a0:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80008a2:	89a3      	ldrh	r3, [r4, #12]
 80008a4:	075a      	lsls	r2, r3, #29
 80008a6:	d505      	bpl.n	80008b4 <__sflush_r+0x48>
 80008a8:	6863      	ldr	r3, [r4, #4]
 80008aa:	1ac0      	subs	r0, r0, r3
 80008ac:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80008ae:	b10b      	cbz	r3, 80008b4 <__sflush_r+0x48>
 80008b0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80008b2:	1ac0      	subs	r0, r0, r3
 80008b4:	2300      	movs	r3, #0
 80008b6:	4602      	mov	r2, r0
 80008b8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80008ba:	6a21      	ldr	r1, [r4, #32]
 80008bc:	4628      	mov	r0, r5
 80008be:	47b0      	blx	r6
 80008c0:	1c43      	adds	r3, r0, #1
 80008c2:	89a3      	ldrh	r3, [r4, #12]
 80008c4:	d106      	bne.n	80008d4 <__sflush_r+0x68>
 80008c6:	6829      	ldr	r1, [r5, #0]
 80008c8:	291d      	cmp	r1, #29
 80008ca:	d848      	bhi.n	800095e <__sflush_r+0xf2>
 80008cc:	4a29      	ldr	r2, [pc, #164]	; (8000974 <__sflush_r+0x108>)
 80008ce:	40ca      	lsrs	r2, r1
 80008d0:	07d6      	lsls	r6, r2, #31
 80008d2:	d544      	bpl.n	800095e <__sflush_r+0xf2>
 80008d4:	2200      	movs	r2, #0
 80008d6:	6062      	str	r2, [r4, #4]
 80008d8:	04d9      	lsls	r1, r3, #19
 80008da:	6922      	ldr	r2, [r4, #16]
 80008dc:	6022      	str	r2, [r4, #0]
 80008de:	d504      	bpl.n	80008ea <__sflush_r+0x7e>
 80008e0:	1c42      	adds	r2, r0, #1
 80008e2:	d101      	bne.n	80008e8 <__sflush_r+0x7c>
 80008e4:	682b      	ldr	r3, [r5, #0]
 80008e6:	b903      	cbnz	r3, 80008ea <__sflush_r+0x7e>
 80008e8:	6560      	str	r0, [r4, #84]	; 0x54
 80008ea:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80008ec:	602f      	str	r7, [r5, #0]
 80008ee:	2900      	cmp	r1, #0
 80008f0:	d0c9      	beq.n	8000886 <__sflush_r+0x1a>
 80008f2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80008f6:	4299      	cmp	r1, r3
 80008f8:	d002      	beq.n	8000900 <__sflush_r+0x94>
 80008fa:	4628      	mov	r0, r5
 80008fc:	f000 f994 	bl	8000c28 <_free_r>
 8000900:	2000      	movs	r0, #0
 8000902:	6360      	str	r0, [r4, #52]	; 0x34
 8000904:	e7c0      	b.n	8000888 <__sflush_r+0x1c>
 8000906:	2301      	movs	r3, #1
 8000908:	4628      	mov	r0, r5
 800090a:	47b0      	blx	r6
 800090c:	1c41      	adds	r1, r0, #1
 800090e:	d1c8      	bne.n	80008a2 <__sflush_r+0x36>
 8000910:	682b      	ldr	r3, [r5, #0]
 8000912:	2b00      	cmp	r3, #0
 8000914:	d0c5      	beq.n	80008a2 <__sflush_r+0x36>
 8000916:	2b1d      	cmp	r3, #29
 8000918:	d001      	beq.n	800091e <__sflush_r+0xb2>
 800091a:	2b16      	cmp	r3, #22
 800091c:	d101      	bne.n	8000922 <__sflush_r+0xb6>
 800091e:	602f      	str	r7, [r5, #0]
 8000920:	e7b1      	b.n	8000886 <__sflush_r+0x1a>
 8000922:	89a3      	ldrh	r3, [r4, #12]
 8000924:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000928:	81a3      	strh	r3, [r4, #12]
 800092a:	e7ad      	b.n	8000888 <__sflush_r+0x1c>
 800092c:	690f      	ldr	r7, [r1, #16]
 800092e:	2f00      	cmp	r7, #0
 8000930:	d0a9      	beq.n	8000886 <__sflush_r+0x1a>
 8000932:	0793      	lsls	r3, r2, #30
 8000934:	680e      	ldr	r6, [r1, #0]
 8000936:	bf08      	it	eq
 8000938:	694b      	ldreq	r3, [r1, #20]
 800093a:	600f      	str	r7, [r1, #0]
 800093c:	bf18      	it	ne
 800093e:	2300      	movne	r3, #0
 8000940:	eba6 0807 	sub.w	r8, r6, r7
 8000944:	608b      	str	r3, [r1, #8]
 8000946:	f1b8 0f00 	cmp.w	r8, #0
 800094a:	dd9c      	ble.n	8000886 <__sflush_r+0x1a>
 800094c:	4643      	mov	r3, r8
 800094e:	463a      	mov	r2, r7
 8000950:	6a21      	ldr	r1, [r4, #32]
 8000952:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000954:	4628      	mov	r0, r5
 8000956:	47b0      	blx	r6
 8000958:	2800      	cmp	r0, #0
 800095a:	dc06      	bgt.n	800096a <__sflush_r+0xfe>
 800095c:	89a3      	ldrh	r3, [r4, #12]
 800095e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000962:	81a3      	strh	r3, [r4, #12]
 8000964:	f04f 30ff 	mov.w	r0, #4294967295
 8000968:	e78e      	b.n	8000888 <__sflush_r+0x1c>
 800096a:	4407      	add	r7, r0
 800096c:	eba8 0800 	sub.w	r8, r8, r0
 8000970:	e7e9      	b.n	8000946 <__sflush_r+0xda>
 8000972:	bf00      	nop
 8000974:	20400001 	.word	0x20400001

08000978 <_fflush_r>:
 8000978:	b538      	push	{r3, r4, r5, lr}
 800097a:	690b      	ldr	r3, [r1, #16]
 800097c:	4605      	mov	r5, r0
 800097e:	460c      	mov	r4, r1
 8000980:	b1db      	cbz	r3, 80009ba <_fflush_r+0x42>
 8000982:	b118      	cbz	r0, 800098c <_fflush_r+0x14>
 8000984:	6983      	ldr	r3, [r0, #24]
 8000986:	b90b      	cbnz	r3, 800098c <_fflush_r+0x14>
 8000988:	f000 f860 	bl	8000a4c <__sinit>
 800098c:	4b0c      	ldr	r3, [pc, #48]	; (80009c0 <_fflush_r+0x48>)
 800098e:	429c      	cmp	r4, r3
 8000990:	d109      	bne.n	80009a6 <_fflush_r+0x2e>
 8000992:	686c      	ldr	r4, [r5, #4]
 8000994:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000998:	b17b      	cbz	r3, 80009ba <_fflush_r+0x42>
 800099a:	4621      	mov	r1, r4
 800099c:	4628      	mov	r0, r5
 800099e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80009a2:	f7ff bf63 	b.w	800086c <__sflush_r>
 80009a6:	4b07      	ldr	r3, [pc, #28]	; (80009c4 <_fflush_r+0x4c>)
 80009a8:	429c      	cmp	r4, r3
 80009aa:	d101      	bne.n	80009b0 <_fflush_r+0x38>
 80009ac:	68ac      	ldr	r4, [r5, #8]
 80009ae:	e7f1      	b.n	8000994 <_fflush_r+0x1c>
 80009b0:	4b05      	ldr	r3, [pc, #20]	; (80009c8 <_fflush_r+0x50>)
 80009b2:	429c      	cmp	r4, r3
 80009b4:	bf08      	it	eq
 80009b6:	68ec      	ldreq	r4, [r5, #12]
 80009b8:	e7ec      	b.n	8000994 <_fflush_r+0x1c>
 80009ba:	2000      	movs	r0, #0
 80009bc:	bd38      	pop	{r3, r4, r5, pc}
 80009be:	bf00      	nop
 80009c0:	08001514 	.word	0x08001514
 80009c4:	08001534 	.word	0x08001534
 80009c8:	080014f4 	.word	0x080014f4

080009cc <std>:
 80009cc:	2300      	movs	r3, #0
 80009ce:	b510      	push	{r4, lr}
 80009d0:	4604      	mov	r4, r0
 80009d2:	e9c0 3300 	strd	r3, r3, [r0]
 80009d6:	6083      	str	r3, [r0, #8]
 80009d8:	8181      	strh	r1, [r0, #12]
 80009da:	6643      	str	r3, [r0, #100]	; 0x64
 80009dc:	81c2      	strh	r2, [r0, #14]
 80009de:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80009e2:	6183      	str	r3, [r0, #24]
 80009e4:	4619      	mov	r1, r3
 80009e6:	2208      	movs	r2, #8
 80009e8:	305c      	adds	r0, #92	; 0x5c
 80009ea:	f7ff fdfb 	bl	80005e4 <memset>
 80009ee:	4b05      	ldr	r3, [pc, #20]	; (8000a04 <std+0x38>)
 80009f0:	6263      	str	r3, [r4, #36]	; 0x24
 80009f2:	4b05      	ldr	r3, [pc, #20]	; (8000a08 <std+0x3c>)
 80009f4:	62a3      	str	r3, [r4, #40]	; 0x28
 80009f6:	4b05      	ldr	r3, [pc, #20]	; (8000a0c <std+0x40>)
 80009f8:	62e3      	str	r3, [r4, #44]	; 0x2c
 80009fa:	4b05      	ldr	r3, [pc, #20]	; (8000a10 <std+0x44>)
 80009fc:	6224      	str	r4, [r4, #32]
 80009fe:	6323      	str	r3, [r4, #48]	; 0x30
 8000a00:	bd10      	pop	{r4, pc}
 8000a02:	bf00      	nop
 8000a04:	08001325 	.word	0x08001325
 8000a08:	08001347 	.word	0x08001347
 8000a0c:	0800137f 	.word	0x0800137f
 8000a10:	080013a3 	.word	0x080013a3

08000a14 <_cleanup_r>:
 8000a14:	4901      	ldr	r1, [pc, #4]	; (8000a1c <_cleanup_r+0x8>)
 8000a16:	f000 b885 	b.w	8000b24 <_fwalk_reent>
 8000a1a:	bf00      	nop
 8000a1c:	08000979 	.word	0x08000979

08000a20 <__sfmoreglue>:
 8000a20:	b570      	push	{r4, r5, r6, lr}
 8000a22:	1e4a      	subs	r2, r1, #1
 8000a24:	2568      	movs	r5, #104	; 0x68
 8000a26:	4355      	muls	r5, r2
 8000a28:	460e      	mov	r6, r1
 8000a2a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000a2e:	f000 f949 	bl	8000cc4 <_malloc_r>
 8000a32:	4604      	mov	r4, r0
 8000a34:	b140      	cbz	r0, 8000a48 <__sfmoreglue+0x28>
 8000a36:	2100      	movs	r1, #0
 8000a38:	e9c0 1600 	strd	r1, r6, [r0]
 8000a3c:	300c      	adds	r0, #12
 8000a3e:	60a0      	str	r0, [r4, #8]
 8000a40:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000a44:	f7ff fdce 	bl	80005e4 <memset>
 8000a48:	4620      	mov	r0, r4
 8000a4a:	bd70      	pop	{r4, r5, r6, pc}

08000a4c <__sinit>:
 8000a4c:	6983      	ldr	r3, [r0, #24]
 8000a4e:	b510      	push	{r4, lr}
 8000a50:	4604      	mov	r4, r0
 8000a52:	bb33      	cbnz	r3, 8000aa2 <__sinit+0x56>
 8000a54:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8000a58:	6503      	str	r3, [r0, #80]	; 0x50
 8000a5a:	4b12      	ldr	r3, [pc, #72]	; (8000aa4 <__sinit+0x58>)
 8000a5c:	4a12      	ldr	r2, [pc, #72]	; (8000aa8 <__sinit+0x5c>)
 8000a5e:	681b      	ldr	r3, [r3, #0]
 8000a60:	6282      	str	r2, [r0, #40]	; 0x28
 8000a62:	4298      	cmp	r0, r3
 8000a64:	bf04      	itt	eq
 8000a66:	2301      	moveq	r3, #1
 8000a68:	6183      	streq	r3, [r0, #24]
 8000a6a:	f000 f81f 	bl	8000aac <__sfp>
 8000a6e:	6060      	str	r0, [r4, #4]
 8000a70:	4620      	mov	r0, r4
 8000a72:	f000 f81b 	bl	8000aac <__sfp>
 8000a76:	60a0      	str	r0, [r4, #8]
 8000a78:	4620      	mov	r0, r4
 8000a7a:	f000 f817 	bl	8000aac <__sfp>
 8000a7e:	2200      	movs	r2, #0
 8000a80:	60e0      	str	r0, [r4, #12]
 8000a82:	2104      	movs	r1, #4
 8000a84:	6860      	ldr	r0, [r4, #4]
 8000a86:	f7ff ffa1 	bl	80009cc <std>
 8000a8a:	2201      	movs	r2, #1
 8000a8c:	2109      	movs	r1, #9
 8000a8e:	68a0      	ldr	r0, [r4, #8]
 8000a90:	f7ff ff9c 	bl	80009cc <std>
 8000a94:	2202      	movs	r2, #2
 8000a96:	2112      	movs	r1, #18
 8000a98:	68e0      	ldr	r0, [r4, #12]
 8000a9a:	f7ff ff97 	bl	80009cc <std>
 8000a9e:	2301      	movs	r3, #1
 8000aa0:	61a3      	str	r3, [r4, #24]
 8000aa2:	bd10      	pop	{r4, pc}
 8000aa4:	080014f0 	.word	0x080014f0
 8000aa8:	08000a15 	.word	0x08000a15

08000aac <__sfp>:
 8000aac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000aae:	4b1b      	ldr	r3, [pc, #108]	; (8000b1c <__sfp+0x70>)
 8000ab0:	681e      	ldr	r6, [r3, #0]
 8000ab2:	69b3      	ldr	r3, [r6, #24]
 8000ab4:	4607      	mov	r7, r0
 8000ab6:	b913      	cbnz	r3, 8000abe <__sfp+0x12>
 8000ab8:	4630      	mov	r0, r6
 8000aba:	f7ff ffc7 	bl	8000a4c <__sinit>
 8000abe:	3648      	adds	r6, #72	; 0x48
 8000ac0:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000ac4:	3b01      	subs	r3, #1
 8000ac6:	d503      	bpl.n	8000ad0 <__sfp+0x24>
 8000ac8:	6833      	ldr	r3, [r6, #0]
 8000aca:	b133      	cbz	r3, 8000ada <__sfp+0x2e>
 8000acc:	6836      	ldr	r6, [r6, #0]
 8000ace:	e7f7      	b.n	8000ac0 <__sfp+0x14>
 8000ad0:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000ad4:	b16d      	cbz	r5, 8000af2 <__sfp+0x46>
 8000ad6:	3468      	adds	r4, #104	; 0x68
 8000ad8:	e7f4      	b.n	8000ac4 <__sfp+0x18>
 8000ada:	2104      	movs	r1, #4
 8000adc:	4638      	mov	r0, r7
 8000ade:	f7ff ff9f 	bl	8000a20 <__sfmoreglue>
 8000ae2:	6030      	str	r0, [r6, #0]
 8000ae4:	2800      	cmp	r0, #0
 8000ae6:	d1f1      	bne.n	8000acc <__sfp+0x20>
 8000ae8:	230c      	movs	r3, #12
 8000aea:	603b      	str	r3, [r7, #0]
 8000aec:	4604      	mov	r4, r0
 8000aee:	4620      	mov	r0, r4
 8000af0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000af2:	4b0b      	ldr	r3, [pc, #44]	; (8000b20 <__sfp+0x74>)
 8000af4:	6665      	str	r5, [r4, #100]	; 0x64
 8000af6:	e9c4 5500 	strd	r5, r5, [r4]
 8000afa:	60a5      	str	r5, [r4, #8]
 8000afc:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8000b00:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8000b04:	2208      	movs	r2, #8
 8000b06:	4629      	mov	r1, r5
 8000b08:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000b0c:	f7ff fd6a 	bl	80005e4 <memset>
 8000b10:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000b14:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000b18:	e7e9      	b.n	8000aee <__sfp+0x42>
 8000b1a:	bf00      	nop
 8000b1c:	080014f0 	.word	0x080014f0
 8000b20:	ffff0001 	.word	0xffff0001

08000b24 <_fwalk_reent>:
 8000b24:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000b28:	4680      	mov	r8, r0
 8000b2a:	4689      	mov	r9, r1
 8000b2c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000b30:	2600      	movs	r6, #0
 8000b32:	b914      	cbnz	r4, 8000b3a <_fwalk_reent+0x16>
 8000b34:	4630      	mov	r0, r6
 8000b36:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000b3a:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 8000b3e:	3f01      	subs	r7, #1
 8000b40:	d501      	bpl.n	8000b46 <_fwalk_reent+0x22>
 8000b42:	6824      	ldr	r4, [r4, #0]
 8000b44:	e7f5      	b.n	8000b32 <_fwalk_reent+0xe>
 8000b46:	89ab      	ldrh	r3, [r5, #12]
 8000b48:	2b01      	cmp	r3, #1
 8000b4a:	d907      	bls.n	8000b5c <_fwalk_reent+0x38>
 8000b4c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000b50:	3301      	adds	r3, #1
 8000b52:	d003      	beq.n	8000b5c <_fwalk_reent+0x38>
 8000b54:	4629      	mov	r1, r5
 8000b56:	4640      	mov	r0, r8
 8000b58:	47c8      	blx	r9
 8000b5a:	4306      	orrs	r6, r0
 8000b5c:	3568      	adds	r5, #104	; 0x68
 8000b5e:	e7ee      	b.n	8000b3e <_fwalk_reent+0x1a>

08000b60 <__swhatbuf_r>:
 8000b60:	b570      	push	{r4, r5, r6, lr}
 8000b62:	460e      	mov	r6, r1
 8000b64:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000b68:	2900      	cmp	r1, #0
 8000b6a:	b096      	sub	sp, #88	; 0x58
 8000b6c:	4614      	mov	r4, r2
 8000b6e:	461d      	mov	r5, r3
 8000b70:	da07      	bge.n	8000b82 <__swhatbuf_r+0x22>
 8000b72:	2300      	movs	r3, #0
 8000b74:	602b      	str	r3, [r5, #0]
 8000b76:	89b3      	ldrh	r3, [r6, #12]
 8000b78:	061a      	lsls	r2, r3, #24
 8000b7a:	d410      	bmi.n	8000b9e <__swhatbuf_r+0x3e>
 8000b7c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000b80:	e00e      	b.n	8000ba0 <__swhatbuf_r+0x40>
 8000b82:	466a      	mov	r2, sp
 8000b84:	f000 fc34 	bl	80013f0 <_fstat_r>
 8000b88:	2800      	cmp	r0, #0
 8000b8a:	dbf2      	blt.n	8000b72 <__swhatbuf_r+0x12>
 8000b8c:	9a01      	ldr	r2, [sp, #4]
 8000b8e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000b92:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000b96:	425a      	negs	r2, r3
 8000b98:	415a      	adcs	r2, r3
 8000b9a:	602a      	str	r2, [r5, #0]
 8000b9c:	e7ee      	b.n	8000b7c <__swhatbuf_r+0x1c>
 8000b9e:	2340      	movs	r3, #64	; 0x40
 8000ba0:	2000      	movs	r0, #0
 8000ba2:	6023      	str	r3, [r4, #0]
 8000ba4:	b016      	add	sp, #88	; 0x58
 8000ba6:	bd70      	pop	{r4, r5, r6, pc}

08000ba8 <__smakebuf_r>:
 8000ba8:	898b      	ldrh	r3, [r1, #12]
 8000baa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000bac:	079d      	lsls	r5, r3, #30
 8000bae:	4606      	mov	r6, r0
 8000bb0:	460c      	mov	r4, r1
 8000bb2:	d507      	bpl.n	8000bc4 <__smakebuf_r+0x1c>
 8000bb4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000bb8:	6023      	str	r3, [r4, #0]
 8000bba:	6123      	str	r3, [r4, #16]
 8000bbc:	2301      	movs	r3, #1
 8000bbe:	6163      	str	r3, [r4, #20]
 8000bc0:	b002      	add	sp, #8
 8000bc2:	bd70      	pop	{r4, r5, r6, pc}
 8000bc4:	ab01      	add	r3, sp, #4
 8000bc6:	466a      	mov	r2, sp
 8000bc8:	f7ff ffca 	bl	8000b60 <__swhatbuf_r>
 8000bcc:	9900      	ldr	r1, [sp, #0]
 8000bce:	4605      	mov	r5, r0
 8000bd0:	4630      	mov	r0, r6
 8000bd2:	f000 f877 	bl	8000cc4 <_malloc_r>
 8000bd6:	b948      	cbnz	r0, 8000bec <__smakebuf_r+0x44>
 8000bd8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000bdc:	059a      	lsls	r2, r3, #22
 8000bde:	d4ef      	bmi.n	8000bc0 <__smakebuf_r+0x18>
 8000be0:	f023 0303 	bic.w	r3, r3, #3
 8000be4:	f043 0302 	orr.w	r3, r3, #2
 8000be8:	81a3      	strh	r3, [r4, #12]
 8000bea:	e7e3      	b.n	8000bb4 <__smakebuf_r+0xc>
 8000bec:	4b0d      	ldr	r3, [pc, #52]	; (8000c24 <__smakebuf_r+0x7c>)
 8000bee:	62b3      	str	r3, [r6, #40]	; 0x28
 8000bf0:	89a3      	ldrh	r3, [r4, #12]
 8000bf2:	6020      	str	r0, [r4, #0]
 8000bf4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000bf8:	81a3      	strh	r3, [r4, #12]
 8000bfa:	9b00      	ldr	r3, [sp, #0]
 8000bfc:	6163      	str	r3, [r4, #20]
 8000bfe:	9b01      	ldr	r3, [sp, #4]
 8000c00:	6120      	str	r0, [r4, #16]
 8000c02:	b15b      	cbz	r3, 8000c1c <__smakebuf_r+0x74>
 8000c04:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c08:	4630      	mov	r0, r6
 8000c0a:	f000 fc03 	bl	8001414 <_isatty_r>
 8000c0e:	b128      	cbz	r0, 8000c1c <__smakebuf_r+0x74>
 8000c10:	89a3      	ldrh	r3, [r4, #12]
 8000c12:	f023 0303 	bic.w	r3, r3, #3
 8000c16:	f043 0301 	orr.w	r3, r3, #1
 8000c1a:	81a3      	strh	r3, [r4, #12]
 8000c1c:	89a3      	ldrh	r3, [r4, #12]
 8000c1e:	431d      	orrs	r5, r3
 8000c20:	81a5      	strh	r5, [r4, #12]
 8000c22:	e7cd      	b.n	8000bc0 <__smakebuf_r+0x18>
 8000c24:	08000a15 	.word	0x08000a15

08000c28 <_free_r>:
 8000c28:	b538      	push	{r3, r4, r5, lr}
 8000c2a:	4605      	mov	r5, r0
 8000c2c:	2900      	cmp	r1, #0
 8000c2e:	d045      	beq.n	8000cbc <_free_r+0x94>
 8000c30:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000c34:	1f0c      	subs	r4, r1, #4
 8000c36:	2b00      	cmp	r3, #0
 8000c38:	bfb8      	it	lt
 8000c3a:	18e4      	addlt	r4, r4, r3
 8000c3c:	f000 fc0c 	bl	8001458 <__malloc_lock>
 8000c40:	4a1f      	ldr	r2, [pc, #124]	; (8000cc0 <_free_r+0x98>)
 8000c42:	6813      	ldr	r3, [r2, #0]
 8000c44:	4610      	mov	r0, r2
 8000c46:	b933      	cbnz	r3, 8000c56 <_free_r+0x2e>
 8000c48:	6063      	str	r3, [r4, #4]
 8000c4a:	6014      	str	r4, [r2, #0]
 8000c4c:	4628      	mov	r0, r5
 8000c4e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000c52:	f000 bc02 	b.w	800145a <__malloc_unlock>
 8000c56:	42a3      	cmp	r3, r4
 8000c58:	d90c      	bls.n	8000c74 <_free_r+0x4c>
 8000c5a:	6821      	ldr	r1, [r4, #0]
 8000c5c:	1862      	adds	r2, r4, r1
 8000c5e:	4293      	cmp	r3, r2
 8000c60:	bf04      	itt	eq
 8000c62:	681a      	ldreq	r2, [r3, #0]
 8000c64:	685b      	ldreq	r3, [r3, #4]
 8000c66:	6063      	str	r3, [r4, #4]
 8000c68:	bf04      	itt	eq
 8000c6a:	1852      	addeq	r2, r2, r1
 8000c6c:	6022      	streq	r2, [r4, #0]
 8000c6e:	6004      	str	r4, [r0, #0]
 8000c70:	e7ec      	b.n	8000c4c <_free_r+0x24>
 8000c72:	4613      	mov	r3, r2
 8000c74:	685a      	ldr	r2, [r3, #4]
 8000c76:	b10a      	cbz	r2, 8000c7c <_free_r+0x54>
 8000c78:	42a2      	cmp	r2, r4
 8000c7a:	d9fa      	bls.n	8000c72 <_free_r+0x4a>
 8000c7c:	6819      	ldr	r1, [r3, #0]
 8000c7e:	1858      	adds	r0, r3, r1
 8000c80:	42a0      	cmp	r0, r4
 8000c82:	d10b      	bne.n	8000c9c <_free_r+0x74>
 8000c84:	6820      	ldr	r0, [r4, #0]
 8000c86:	4401      	add	r1, r0
 8000c88:	1858      	adds	r0, r3, r1
 8000c8a:	4282      	cmp	r2, r0
 8000c8c:	6019      	str	r1, [r3, #0]
 8000c8e:	d1dd      	bne.n	8000c4c <_free_r+0x24>
 8000c90:	6810      	ldr	r0, [r2, #0]
 8000c92:	6852      	ldr	r2, [r2, #4]
 8000c94:	605a      	str	r2, [r3, #4]
 8000c96:	4401      	add	r1, r0
 8000c98:	6019      	str	r1, [r3, #0]
 8000c9a:	e7d7      	b.n	8000c4c <_free_r+0x24>
 8000c9c:	d902      	bls.n	8000ca4 <_free_r+0x7c>
 8000c9e:	230c      	movs	r3, #12
 8000ca0:	602b      	str	r3, [r5, #0]
 8000ca2:	e7d3      	b.n	8000c4c <_free_r+0x24>
 8000ca4:	6820      	ldr	r0, [r4, #0]
 8000ca6:	1821      	adds	r1, r4, r0
 8000ca8:	428a      	cmp	r2, r1
 8000caa:	bf04      	itt	eq
 8000cac:	6811      	ldreq	r1, [r2, #0]
 8000cae:	6852      	ldreq	r2, [r2, #4]
 8000cb0:	6062      	str	r2, [r4, #4]
 8000cb2:	bf04      	itt	eq
 8000cb4:	1809      	addeq	r1, r1, r0
 8000cb6:	6021      	streq	r1, [r4, #0]
 8000cb8:	605c      	str	r4, [r3, #4]
 8000cba:	e7c7      	b.n	8000c4c <_free_r+0x24>
 8000cbc:	bd38      	pop	{r3, r4, r5, pc}
 8000cbe:	bf00      	nop
 8000cc0:	20000084 	.word	0x20000084

08000cc4 <_malloc_r>:
 8000cc4:	b570      	push	{r4, r5, r6, lr}
 8000cc6:	1ccd      	adds	r5, r1, #3
 8000cc8:	f025 0503 	bic.w	r5, r5, #3
 8000ccc:	3508      	adds	r5, #8
 8000cce:	2d0c      	cmp	r5, #12
 8000cd0:	bf38      	it	cc
 8000cd2:	250c      	movcc	r5, #12
 8000cd4:	2d00      	cmp	r5, #0
 8000cd6:	4606      	mov	r6, r0
 8000cd8:	db01      	blt.n	8000cde <_malloc_r+0x1a>
 8000cda:	42a9      	cmp	r1, r5
 8000cdc:	d903      	bls.n	8000ce6 <_malloc_r+0x22>
 8000cde:	230c      	movs	r3, #12
 8000ce0:	6033      	str	r3, [r6, #0]
 8000ce2:	2000      	movs	r0, #0
 8000ce4:	bd70      	pop	{r4, r5, r6, pc}
 8000ce6:	f000 fbb7 	bl	8001458 <__malloc_lock>
 8000cea:	4a21      	ldr	r2, [pc, #132]	; (8000d70 <_malloc_r+0xac>)
 8000cec:	6814      	ldr	r4, [r2, #0]
 8000cee:	4621      	mov	r1, r4
 8000cf0:	b991      	cbnz	r1, 8000d18 <_malloc_r+0x54>
 8000cf2:	4c20      	ldr	r4, [pc, #128]	; (8000d74 <_malloc_r+0xb0>)
 8000cf4:	6823      	ldr	r3, [r4, #0]
 8000cf6:	b91b      	cbnz	r3, 8000d00 <_malloc_r+0x3c>
 8000cf8:	4630      	mov	r0, r6
 8000cfa:	f000 fb03 	bl	8001304 <_sbrk_r>
 8000cfe:	6020      	str	r0, [r4, #0]
 8000d00:	4629      	mov	r1, r5
 8000d02:	4630      	mov	r0, r6
 8000d04:	f000 fafe 	bl	8001304 <_sbrk_r>
 8000d08:	1c43      	adds	r3, r0, #1
 8000d0a:	d124      	bne.n	8000d56 <_malloc_r+0x92>
 8000d0c:	230c      	movs	r3, #12
 8000d0e:	6033      	str	r3, [r6, #0]
 8000d10:	4630      	mov	r0, r6
 8000d12:	f000 fba2 	bl	800145a <__malloc_unlock>
 8000d16:	e7e4      	b.n	8000ce2 <_malloc_r+0x1e>
 8000d18:	680b      	ldr	r3, [r1, #0]
 8000d1a:	1b5b      	subs	r3, r3, r5
 8000d1c:	d418      	bmi.n	8000d50 <_malloc_r+0x8c>
 8000d1e:	2b0b      	cmp	r3, #11
 8000d20:	d90f      	bls.n	8000d42 <_malloc_r+0x7e>
 8000d22:	600b      	str	r3, [r1, #0]
 8000d24:	50cd      	str	r5, [r1, r3]
 8000d26:	18cc      	adds	r4, r1, r3
 8000d28:	4630      	mov	r0, r6
 8000d2a:	f000 fb96 	bl	800145a <__malloc_unlock>
 8000d2e:	f104 000b 	add.w	r0, r4, #11
 8000d32:	1d23      	adds	r3, r4, #4
 8000d34:	f020 0007 	bic.w	r0, r0, #7
 8000d38:	1ac3      	subs	r3, r0, r3
 8000d3a:	d0d3      	beq.n	8000ce4 <_malloc_r+0x20>
 8000d3c:	425a      	negs	r2, r3
 8000d3e:	50e2      	str	r2, [r4, r3]
 8000d40:	e7d0      	b.n	8000ce4 <_malloc_r+0x20>
 8000d42:	428c      	cmp	r4, r1
 8000d44:	684b      	ldr	r3, [r1, #4]
 8000d46:	bf16      	itet	ne
 8000d48:	6063      	strne	r3, [r4, #4]
 8000d4a:	6013      	streq	r3, [r2, #0]
 8000d4c:	460c      	movne	r4, r1
 8000d4e:	e7eb      	b.n	8000d28 <_malloc_r+0x64>
 8000d50:	460c      	mov	r4, r1
 8000d52:	6849      	ldr	r1, [r1, #4]
 8000d54:	e7cc      	b.n	8000cf0 <_malloc_r+0x2c>
 8000d56:	1cc4      	adds	r4, r0, #3
 8000d58:	f024 0403 	bic.w	r4, r4, #3
 8000d5c:	42a0      	cmp	r0, r4
 8000d5e:	d005      	beq.n	8000d6c <_malloc_r+0xa8>
 8000d60:	1a21      	subs	r1, r4, r0
 8000d62:	4630      	mov	r0, r6
 8000d64:	f000 face 	bl	8001304 <_sbrk_r>
 8000d68:	3001      	adds	r0, #1
 8000d6a:	d0cf      	beq.n	8000d0c <_malloc_r+0x48>
 8000d6c:	6025      	str	r5, [r4, #0]
 8000d6e:	e7db      	b.n	8000d28 <_malloc_r+0x64>
 8000d70:	20000084 	.word	0x20000084
 8000d74:	20000088 	.word	0x20000088

08000d78 <__sfputc_r>:
 8000d78:	6893      	ldr	r3, [r2, #8]
 8000d7a:	3b01      	subs	r3, #1
 8000d7c:	2b00      	cmp	r3, #0
 8000d7e:	b410      	push	{r4}
 8000d80:	6093      	str	r3, [r2, #8]
 8000d82:	da07      	bge.n	8000d94 <__sfputc_r+0x1c>
 8000d84:	6994      	ldr	r4, [r2, #24]
 8000d86:	42a3      	cmp	r3, r4
 8000d88:	db01      	blt.n	8000d8e <__sfputc_r+0x16>
 8000d8a:	290a      	cmp	r1, #10
 8000d8c:	d102      	bne.n	8000d94 <__sfputc_r+0x1c>
 8000d8e:	bc10      	pop	{r4}
 8000d90:	f7ff bcac 	b.w	80006ec <__swbuf_r>
 8000d94:	6813      	ldr	r3, [r2, #0]
 8000d96:	1c58      	adds	r0, r3, #1
 8000d98:	6010      	str	r0, [r2, #0]
 8000d9a:	7019      	strb	r1, [r3, #0]
 8000d9c:	4608      	mov	r0, r1
 8000d9e:	bc10      	pop	{r4}
 8000da0:	4770      	bx	lr

08000da2 <__sfputs_r>:
 8000da2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000da4:	4606      	mov	r6, r0
 8000da6:	460f      	mov	r7, r1
 8000da8:	4614      	mov	r4, r2
 8000daa:	18d5      	adds	r5, r2, r3
 8000dac:	42ac      	cmp	r4, r5
 8000dae:	d101      	bne.n	8000db4 <__sfputs_r+0x12>
 8000db0:	2000      	movs	r0, #0
 8000db2:	e007      	b.n	8000dc4 <__sfputs_r+0x22>
 8000db4:	463a      	mov	r2, r7
 8000db6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000dba:	4630      	mov	r0, r6
 8000dbc:	f7ff ffdc 	bl	8000d78 <__sfputc_r>
 8000dc0:	1c43      	adds	r3, r0, #1
 8000dc2:	d1f3      	bne.n	8000dac <__sfputs_r+0xa>
 8000dc4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000dc8 <_vfiprintf_r>:
 8000dc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000dcc:	460c      	mov	r4, r1
 8000dce:	b09d      	sub	sp, #116	; 0x74
 8000dd0:	4617      	mov	r7, r2
 8000dd2:	461d      	mov	r5, r3
 8000dd4:	4606      	mov	r6, r0
 8000dd6:	b118      	cbz	r0, 8000de0 <_vfiprintf_r+0x18>
 8000dd8:	6983      	ldr	r3, [r0, #24]
 8000dda:	b90b      	cbnz	r3, 8000de0 <_vfiprintf_r+0x18>
 8000ddc:	f7ff fe36 	bl	8000a4c <__sinit>
 8000de0:	4b7c      	ldr	r3, [pc, #496]	; (8000fd4 <_vfiprintf_r+0x20c>)
 8000de2:	429c      	cmp	r4, r3
 8000de4:	d158      	bne.n	8000e98 <_vfiprintf_r+0xd0>
 8000de6:	6874      	ldr	r4, [r6, #4]
 8000de8:	89a3      	ldrh	r3, [r4, #12]
 8000dea:	0718      	lsls	r0, r3, #28
 8000dec:	d55e      	bpl.n	8000eac <_vfiprintf_r+0xe4>
 8000dee:	6923      	ldr	r3, [r4, #16]
 8000df0:	2b00      	cmp	r3, #0
 8000df2:	d05b      	beq.n	8000eac <_vfiprintf_r+0xe4>
 8000df4:	2300      	movs	r3, #0
 8000df6:	9309      	str	r3, [sp, #36]	; 0x24
 8000df8:	2320      	movs	r3, #32
 8000dfa:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000dfe:	2330      	movs	r3, #48	; 0x30
 8000e00:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000e04:	9503      	str	r5, [sp, #12]
 8000e06:	f04f 0b01 	mov.w	fp, #1
 8000e0a:	46b8      	mov	r8, r7
 8000e0c:	4645      	mov	r5, r8
 8000e0e:	f815 3b01 	ldrb.w	r3, [r5], #1
 8000e12:	b10b      	cbz	r3, 8000e18 <_vfiprintf_r+0x50>
 8000e14:	2b25      	cmp	r3, #37	; 0x25
 8000e16:	d154      	bne.n	8000ec2 <_vfiprintf_r+0xfa>
 8000e18:	ebb8 0a07 	subs.w	sl, r8, r7
 8000e1c:	d00b      	beq.n	8000e36 <_vfiprintf_r+0x6e>
 8000e1e:	4653      	mov	r3, sl
 8000e20:	463a      	mov	r2, r7
 8000e22:	4621      	mov	r1, r4
 8000e24:	4630      	mov	r0, r6
 8000e26:	f7ff ffbc 	bl	8000da2 <__sfputs_r>
 8000e2a:	3001      	adds	r0, #1
 8000e2c:	f000 80c2 	beq.w	8000fb4 <_vfiprintf_r+0x1ec>
 8000e30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000e32:	4453      	add	r3, sl
 8000e34:	9309      	str	r3, [sp, #36]	; 0x24
 8000e36:	f898 3000 	ldrb.w	r3, [r8]
 8000e3a:	2b00      	cmp	r3, #0
 8000e3c:	f000 80ba 	beq.w	8000fb4 <_vfiprintf_r+0x1ec>
 8000e40:	2300      	movs	r3, #0
 8000e42:	f04f 32ff 	mov.w	r2, #4294967295
 8000e46:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000e4a:	9304      	str	r3, [sp, #16]
 8000e4c:	9307      	str	r3, [sp, #28]
 8000e4e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000e52:	931a      	str	r3, [sp, #104]	; 0x68
 8000e54:	46a8      	mov	r8, r5
 8000e56:	2205      	movs	r2, #5
 8000e58:	f818 1b01 	ldrb.w	r1, [r8], #1
 8000e5c:	485e      	ldr	r0, [pc, #376]	; (8000fd8 <_vfiprintf_r+0x210>)
 8000e5e:	f7ff f9c7 	bl	80001f0 <memchr>
 8000e62:	9b04      	ldr	r3, [sp, #16]
 8000e64:	bb78      	cbnz	r0, 8000ec6 <_vfiprintf_r+0xfe>
 8000e66:	06d9      	lsls	r1, r3, #27
 8000e68:	bf44      	itt	mi
 8000e6a:	2220      	movmi	r2, #32
 8000e6c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000e70:	071a      	lsls	r2, r3, #28
 8000e72:	bf44      	itt	mi
 8000e74:	222b      	movmi	r2, #43	; 0x2b
 8000e76:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000e7a:	782a      	ldrb	r2, [r5, #0]
 8000e7c:	2a2a      	cmp	r2, #42	; 0x2a
 8000e7e:	d02a      	beq.n	8000ed6 <_vfiprintf_r+0x10e>
 8000e80:	9a07      	ldr	r2, [sp, #28]
 8000e82:	46a8      	mov	r8, r5
 8000e84:	2000      	movs	r0, #0
 8000e86:	250a      	movs	r5, #10
 8000e88:	4641      	mov	r1, r8
 8000e8a:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000e8e:	3b30      	subs	r3, #48	; 0x30
 8000e90:	2b09      	cmp	r3, #9
 8000e92:	d969      	bls.n	8000f68 <_vfiprintf_r+0x1a0>
 8000e94:	b360      	cbz	r0, 8000ef0 <_vfiprintf_r+0x128>
 8000e96:	e024      	b.n	8000ee2 <_vfiprintf_r+0x11a>
 8000e98:	4b50      	ldr	r3, [pc, #320]	; (8000fdc <_vfiprintf_r+0x214>)
 8000e9a:	429c      	cmp	r4, r3
 8000e9c:	d101      	bne.n	8000ea2 <_vfiprintf_r+0xda>
 8000e9e:	68b4      	ldr	r4, [r6, #8]
 8000ea0:	e7a2      	b.n	8000de8 <_vfiprintf_r+0x20>
 8000ea2:	4b4f      	ldr	r3, [pc, #316]	; (8000fe0 <_vfiprintf_r+0x218>)
 8000ea4:	429c      	cmp	r4, r3
 8000ea6:	bf08      	it	eq
 8000ea8:	68f4      	ldreq	r4, [r6, #12]
 8000eaa:	e79d      	b.n	8000de8 <_vfiprintf_r+0x20>
 8000eac:	4621      	mov	r1, r4
 8000eae:	4630      	mov	r0, r6
 8000eb0:	f7ff fc6e 	bl	8000790 <__swsetup_r>
 8000eb4:	2800      	cmp	r0, #0
 8000eb6:	d09d      	beq.n	8000df4 <_vfiprintf_r+0x2c>
 8000eb8:	f04f 30ff 	mov.w	r0, #4294967295
 8000ebc:	b01d      	add	sp, #116	; 0x74
 8000ebe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000ec2:	46a8      	mov	r8, r5
 8000ec4:	e7a2      	b.n	8000e0c <_vfiprintf_r+0x44>
 8000ec6:	4a44      	ldr	r2, [pc, #272]	; (8000fd8 <_vfiprintf_r+0x210>)
 8000ec8:	1a80      	subs	r0, r0, r2
 8000eca:	fa0b f000 	lsl.w	r0, fp, r0
 8000ece:	4318      	orrs	r0, r3
 8000ed0:	9004      	str	r0, [sp, #16]
 8000ed2:	4645      	mov	r5, r8
 8000ed4:	e7be      	b.n	8000e54 <_vfiprintf_r+0x8c>
 8000ed6:	9a03      	ldr	r2, [sp, #12]
 8000ed8:	1d11      	adds	r1, r2, #4
 8000eda:	6812      	ldr	r2, [r2, #0]
 8000edc:	9103      	str	r1, [sp, #12]
 8000ede:	2a00      	cmp	r2, #0
 8000ee0:	db01      	blt.n	8000ee6 <_vfiprintf_r+0x11e>
 8000ee2:	9207      	str	r2, [sp, #28]
 8000ee4:	e004      	b.n	8000ef0 <_vfiprintf_r+0x128>
 8000ee6:	4252      	negs	r2, r2
 8000ee8:	f043 0302 	orr.w	r3, r3, #2
 8000eec:	9207      	str	r2, [sp, #28]
 8000eee:	9304      	str	r3, [sp, #16]
 8000ef0:	f898 3000 	ldrb.w	r3, [r8]
 8000ef4:	2b2e      	cmp	r3, #46	; 0x2e
 8000ef6:	d10e      	bne.n	8000f16 <_vfiprintf_r+0x14e>
 8000ef8:	f898 3001 	ldrb.w	r3, [r8, #1]
 8000efc:	2b2a      	cmp	r3, #42	; 0x2a
 8000efe:	d138      	bne.n	8000f72 <_vfiprintf_r+0x1aa>
 8000f00:	9b03      	ldr	r3, [sp, #12]
 8000f02:	1d1a      	adds	r2, r3, #4
 8000f04:	681b      	ldr	r3, [r3, #0]
 8000f06:	9203      	str	r2, [sp, #12]
 8000f08:	2b00      	cmp	r3, #0
 8000f0a:	bfb8      	it	lt
 8000f0c:	f04f 33ff 	movlt.w	r3, #4294967295
 8000f10:	f108 0802 	add.w	r8, r8, #2
 8000f14:	9305      	str	r3, [sp, #20]
 8000f16:	4d33      	ldr	r5, [pc, #204]	; (8000fe4 <_vfiprintf_r+0x21c>)
 8000f18:	f898 1000 	ldrb.w	r1, [r8]
 8000f1c:	2203      	movs	r2, #3
 8000f1e:	4628      	mov	r0, r5
 8000f20:	f7ff f966 	bl	80001f0 <memchr>
 8000f24:	b140      	cbz	r0, 8000f38 <_vfiprintf_r+0x170>
 8000f26:	2340      	movs	r3, #64	; 0x40
 8000f28:	1b40      	subs	r0, r0, r5
 8000f2a:	fa03 f000 	lsl.w	r0, r3, r0
 8000f2e:	9b04      	ldr	r3, [sp, #16]
 8000f30:	4303      	orrs	r3, r0
 8000f32:	f108 0801 	add.w	r8, r8, #1
 8000f36:	9304      	str	r3, [sp, #16]
 8000f38:	f898 1000 	ldrb.w	r1, [r8]
 8000f3c:	482a      	ldr	r0, [pc, #168]	; (8000fe8 <_vfiprintf_r+0x220>)
 8000f3e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000f42:	2206      	movs	r2, #6
 8000f44:	f108 0701 	add.w	r7, r8, #1
 8000f48:	f7ff f952 	bl	80001f0 <memchr>
 8000f4c:	2800      	cmp	r0, #0
 8000f4e:	d037      	beq.n	8000fc0 <_vfiprintf_r+0x1f8>
 8000f50:	4b26      	ldr	r3, [pc, #152]	; (8000fec <_vfiprintf_r+0x224>)
 8000f52:	bb1b      	cbnz	r3, 8000f9c <_vfiprintf_r+0x1d4>
 8000f54:	9b03      	ldr	r3, [sp, #12]
 8000f56:	3307      	adds	r3, #7
 8000f58:	f023 0307 	bic.w	r3, r3, #7
 8000f5c:	3308      	adds	r3, #8
 8000f5e:	9303      	str	r3, [sp, #12]
 8000f60:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000f62:	444b      	add	r3, r9
 8000f64:	9309      	str	r3, [sp, #36]	; 0x24
 8000f66:	e750      	b.n	8000e0a <_vfiprintf_r+0x42>
 8000f68:	fb05 3202 	mla	r2, r5, r2, r3
 8000f6c:	2001      	movs	r0, #1
 8000f6e:	4688      	mov	r8, r1
 8000f70:	e78a      	b.n	8000e88 <_vfiprintf_r+0xc0>
 8000f72:	2300      	movs	r3, #0
 8000f74:	f108 0801 	add.w	r8, r8, #1
 8000f78:	9305      	str	r3, [sp, #20]
 8000f7a:	4619      	mov	r1, r3
 8000f7c:	250a      	movs	r5, #10
 8000f7e:	4640      	mov	r0, r8
 8000f80:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000f84:	3a30      	subs	r2, #48	; 0x30
 8000f86:	2a09      	cmp	r2, #9
 8000f88:	d903      	bls.n	8000f92 <_vfiprintf_r+0x1ca>
 8000f8a:	2b00      	cmp	r3, #0
 8000f8c:	d0c3      	beq.n	8000f16 <_vfiprintf_r+0x14e>
 8000f8e:	9105      	str	r1, [sp, #20]
 8000f90:	e7c1      	b.n	8000f16 <_vfiprintf_r+0x14e>
 8000f92:	fb05 2101 	mla	r1, r5, r1, r2
 8000f96:	2301      	movs	r3, #1
 8000f98:	4680      	mov	r8, r0
 8000f9a:	e7f0      	b.n	8000f7e <_vfiprintf_r+0x1b6>
 8000f9c:	ab03      	add	r3, sp, #12
 8000f9e:	9300      	str	r3, [sp, #0]
 8000fa0:	4622      	mov	r2, r4
 8000fa2:	4b13      	ldr	r3, [pc, #76]	; (8000ff0 <_vfiprintf_r+0x228>)
 8000fa4:	a904      	add	r1, sp, #16
 8000fa6:	4630      	mov	r0, r6
 8000fa8:	f3af 8000 	nop.w
 8000fac:	f1b0 3fff 	cmp.w	r0, #4294967295
 8000fb0:	4681      	mov	r9, r0
 8000fb2:	d1d5      	bne.n	8000f60 <_vfiprintf_r+0x198>
 8000fb4:	89a3      	ldrh	r3, [r4, #12]
 8000fb6:	065b      	lsls	r3, r3, #25
 8000fb8:	f53f af7e 	bmi.w	8000eb8 <_vfiprintf_r+0xf0>
 8000fbc:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000fbe:	e77d      	b.n	8000ebc <_vfiprintf_r+0xf4>
 8000fc0:	ab03      	add	r3, sp, #12
 8000fc2:	9300      	str	r3, [sp, #0]
 8000fc4:	4622      	mov	r2, r4
 8000fc6:	4b0a      	ldr	r3, [pc, #40]	; (8000ff0 <_vfiprintf_r+0x228>)
 8000fc8:	a904      	add	r1, sp, #16
 8000fca:	4630      	mov	r0, r6
 8000fcc:	f000 f888 	bl	80010e0 <_printf_i>
 8000fd0:	e7ec      	b.n	8000fac <_vfiprintf_r+0x1e4>
 8000fd2:	bf00      	nop
 8000fd4:	08001514 	.word	0x08001514
 8000fd8:	08001554 	.word	0x08001554
 8000fdc:	08001534 	.word	0x08001534
 8000fe0:	080014f4 	.word	0x080014f4
 8000fe4:	0800155a 	.word	0x0800155a
 8000fe8:	0800155e 	.word	0x0800155e
 8000fec:	00000000 	.word	0x00000000
 8000ff0:	08000da3 	.word	0x08000da3

08000ff4 <_printf_common>:
 8000ff4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000ff8:	4691      	mov	r9, r2
 8000ffa:	461f      	mov	r7, r3
 8000ffc:	688a      	ldr	r2, [r1, #8]
 8000ffe:	690b      	ldr	r3, [r1, #16]
 8001000:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001004:	4293      	cmp	r3, r2
 8001006:	bfb8      	it	lt
 8001008:	4613      	movlt	r3, r2
 800100a:	f8c9 3000 	str.w	r3, [r9]
 800100e:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001012:	4606      	mov	r6, r0
 8001014:	460c      	mov	r4, r1
 8001016:	b112      	cbz	r2, 800101e <_printf_common+0x2a>
 8001018:	3301      	adds	r3, #1
 800101a:	f8c9 3000 	str.w	r3, [r9]
 800101e:	6823      	ldr	r3, [r4, #0]
 8001020:	0699      	lsls	r1, r3, #26
 8001022:	bf42      	ittt	mi
 8001024:	f8d9 3000 	ldrmi.w	r3, [r9]
 8001028:	3302      	addmi	r3, #2
 800102a:	f8c9 3000 	strmi.w	r3, [r9]
 800102e:	6825      	ldr	r5, [r4, #0]
 8001030:	f015 0506 	ands.w	r5, r5, #6
 8001034:	d107      	bne.n	8001046 <_printf_common+0x52>
 8001036:	f104 0a19 	add.w	sl, r4, #25
 800103a:	68e3      	ldr	r3, [r4, #12]
 800103c:	f8d9 2000 	ldr.w	r2, [r9]
 8001040:	1a9b      	subs	r3, r3, r2
 8001042:	42ab      	cmp	r3, r5
 8001044:	dc28      	bgt.n	8001098 <_printf_common+0xa4>
 8001046:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 800104a:	6822      	ldr	r2, [r4, #0]
 800104c:	3300      	adds	r3, #0
 800104e:	bf18      	it	ne
 8001050:	2301      	movne	r3, #1
 8001052:	0692      	lsls	r2, r2, #26
 8001054:	d42d      	bmi.n	80010b2 <_printf_common+0xbe>
 8001056:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800105a:	4639      	mov	r1, r7
 800105c:	4630      	mov	r0, r6
 800105e:	47c0      	blx	r8
 8001060:	3001      	adds	r0, #1
 8001062:	d020      	beq.n	80010a6 <_printf_common+0xb2>
 8001064:	6823      	ldr	r3, [r4, #0]
 8001066:	68e5      	ldr	r5, [r4, #12]
 8001068:	f8d9 2000 	ldr.w	r2, [r9]
 800106c:	f003 0306 	and.w	r3, r3, #6
 8001070:	2b04      	cmp	r3, #4
 8001072:	bf08      	it	eq
 8001074:	1aad      	subeq	r5, r5, r2
 8001076:	68a3      	ldr	r3, [r4, #8]
 8001078:	6922      	ldr	r2, [r4, #16]
 800107a:	bf0c      	ite	eq
 800107c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001080:	2500      	movne	r5, #0
 8001082:	4293      	cmp	r3, r2
 8001084:	bfc4      	itt	gt
 8001086:	1a9b      	subgt	r3, r3, r2
 8001088:	18ed      	addgt	r5, r5, r3
 800108a:	f04f 0900 	mov.w	r9, #0
 800108e:	341a      	adds	r4, #26
 8001090:	454d      	cmp	r5, r9
 8001092:	d11a      	bne.n	80010ca <_printf_common+0xd6>
 8001094:	2000      	movs	r0, #0
 8001096:	e008      	b.n	80010aa <_printf_common+0xb6>
 8001098:	2301      	movs	r3, #1
 800109a:	4652      	mov	r2, sl
 800109c:	4639      	mov	r1, r7
 800109e:	4630      	mov	r0, r6
 80010a0:	47c0      	blx	r8
 80010a2:	3001      	adds	r0, #1
 80010a4:	d103      	bne.n	80010ae <_printf_common+0xba>
 80010a6:	f04f 30ff 	mov.w	r0, #4294967295
 80010aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80010ae:	3501      	adds	r5, #1
 80010b0:	e7c3      	b.n	800103a <_printf_common+0x46>
 80010b2:	18e1      	adds	r1, r4, r3
 80010b4:	1c5a      	adds	r2, r3, #1
 80010b6:	2030      	movs	r0, #48	; 0x30
 80010b8:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80010bc:	4422      	add	r2, r4
 80010be:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80010c2:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80010c6:	3302      	adds	r3, #2
 80010c8:	e7c5      	b.n	8001056 <_printf_common+0x62>
 80010ca:	2301      	movs	r3, #1
 80010cc:	4622      	mov	r2, r4
 80010ce:	4639      	mov	r1, r7
 80010d0:	4630      	mov	r0, r6
 80010d2:	47c0      	blx	r8
 80010d4:	3001      	adds	r0, #1
 80010d6:	d0e6      	beq.n	80010a6 <_printf_common+0xb2>
 80010d8:	f109 0901 	add.w	r9, r9, #1
 80010dc:	e7d8      	b.n	8001090 <_printf_common+0x9c>
	...

080010e0 <_printf_i>:
 80010e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80010e4:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 80010e8:	460c      	mov	r4, r1
 80010ea:	7e09      	ldrb	r1, [r1, #24]
 80010ec:	b085      	sub	sp, #20
 80010ee:	296e      	cmp	r1, #110	; 0x6e
 80010f0:	4617      	mov	r7, r2
 80010f2:	4606      	mov	r6, r0
 80010f4:	4698      	mov	r8, r3
 80010f6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80010f8:	f000 80b3 	beq.w	8001262 <_printf_i+0x182>
 80010fc:	d822      	bhi.n	8001144 <_printf_i+0x64>
 80010fe:	2963      	cmp	r1, #99	; 0x63
 8001100:	d036      	beq.n	8001170 <_printf_i+0x90>
 8001102:	d80a      	bhi.n	800111a <_printf_i+0x3a>
 8001104:	2900      	cmp	r1, #0
 8001106:	f000 80b9 	beq.w	800127c <_printf_i+0x19c>
 800110a:	2958      	cmp	r1, #88	; 0x58
 800110c:	f000 8083 	beq.w	8001216 <_printf_i+0x136>
 8001110:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001114:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8001118:	e032      	b.n	8001180 <_printf_i+0xa0>
 800111a:	2964      	cmp	r1, #100	; 0x64
 800111c:	d001      	beq.n	8001122 <_printf_i+0x42>
 800111e:	2969      	cmp	r1, #105	; 0x69
 8001120:	d1f6      	bne.n	8001110 <_printf_i+0x30>
 8001122:	6820      	ldr	r0, [r4, #0]
 8001124:	6813      	ldr	r3, [r2, #0]
 8001126:	0605      	lsls	r5, r0, #24
 8001128:	f103 0104 	add.w	r1, r3, #4
 800112c:	d52a      	bpl.n	8001184 <_printf_i+0xa4>
 800112e:	681b      	ldr	r3, [r3, #0]
 8001130:	6011      	str	r1, [r2, #0]
 8001132:	2b00      	cmp	r3, #0
 8001134:	da03      	bge.n	800113e <_printf_i+0x5e>
 8001136:	222d      	movs	r2, #45	; 0x2d
 8001138:	425b      	negs	r3, r3
 800113a:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 800113e:	486f      	ldr	r0, [pc, #444]	; (80012fc <_printf_i+0x21c>)
 8001140:	220a      	movs	r2, #10
 8001142:	e039      	b.n	80011b8 <_printf_i+0xd8>
 8001144:	2973      	cmp	r1, #115	; 0x73
 8001146:	f000 809d 	beq.w	8001284 <_printf_i+0x1a4>
 800114a:	d808      	bhi.n	800115e <_printf_i+0x7e>
 800114c:	296f      	cmp	r1, #111	; 0x6f
 800114e:	d020      	beq.n	8001192 <_printf_i+0xb2>
 8001150:	2970      	cmp	r1, #112	; 0x70
 8001152:	d1dd      	bne.n	8001110 <_printf_i+0x30>
 8001154:	6823      	ldr	r3, [r4, #0]
 8001156:	f043 0320 	orr.w	r3, r3, #32
 800115a:	6023      	str	r3, [r4, #0]
 800115c:	e003      	b.n	8001166 <_printf_i+0x86>
 800115e:	2975      	cmp	r1, #117	; 0x75
 8001160:	d017      	beq.n	8001192 <_printf_i+0xb2>
 8001162:	2978      	cmp	r1, #120	; 0x78
 8001164:	d1d4      	bne.n	8001110 <_printf_i+0x30>
 8001166:	2378      	movs	r3, #120	; 0x78
 8001168:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800116c:	4864      	ldr	r0, [pc, #400]	; (8001300 <_printf_i+0x220>)
 800116e:	e055      	b.n	800121c <_printf_i+0x13c>
 8001170:	6813      	ldr	r3, [r2, #0]
 8001172:	1d19      	adds	r1, r3, #4
 8001174:	681b      	ldr	r3, [r3, #0]
 8001176:	6011      	str	r1, [r2, #0]
 8001178:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800117c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001180:	2301      	movs	r3, #1
 8001182:	e08c      	b.n	800129e <_printf_i+0x1be>
 8001184:	681b      	ldr	r3, [r3, #0]
 8001186:	6011      	str	r1, [r2, #0]
 8001188:	f010 0f40 	tst.w	r0, #64	; 0x40
 800118c:	bf18      	it	ne
 800118e:	b21b      	sxthne	r3, r3
 8001190:	e7cf      	b.n	8001132 <_printf_i+0x52>
 8001192:	6813      	ldr	r3, [r2, #0]
 8001194:	6825      	ldr	r5, [r4, #0]
 8001196:	1d18      	adds	r0, r3, #4
 8001198:	6010      	str	r0, [r2, #0]
 800119a:	0628      	lsls	r0, r5, #24
 800119c:	d501      	bpl.n	80011a2 <_printf_i+0xc2>
 800119e:	681b      	ldr	r3, [r3, #0]
 80011a0:	e002      	b.n	80011a8 <_printf_i+0xc8>
 80011a2:	0668      	lsls	r0, r5, #25
 80011a4:	d5fb      	bpl.n	800119e <_printf_i+0xbe>
 80011a6:	881b      	ldrh	r3, [r3, #0]
 80011a8:	4854      	ldr	r0, [pc, #336]	; (80012fc <_printf_i+0x21c>)
 80011aa:	296f      	cmp	r1, #111	; 0x6f
 80011ac:	bf14      	ite	ne
 80011ae:	220a      	movne	r2, #10
 80011b0:	2208      	moveq	r2, #8
 80011b2:	2100      	movs	r1, #0
 80011b4:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80011b8:	6865      	ldr	r5, [r4, #4]
 80011ba:	60a5      	str	r5, [r4, #8]
 80011bc:	2d00      	cmp	r5, #0
 80011be:	f2c0 8095 	blt.w	80012ec <_printf_i+0x20c>
 80011c2:	6821      	ldr	r1, [r4, #0]
 80011c4:	f021 0104 	bic.w	r1, r1, #4
 80011c8:	6021      	str	r1, [r4, #0]
 80011ca:	2b00      	cmp	r3, #0
 80011cc:	d13d      	bne.n	800124a <_printf_i+0x16a>
 80011ce:	2d00      	cmp	r5, #0
 80011d0:	f040 808e 	bne.w	80012f0 <_printf_i+0x210>
 80011d4:	4665      	mov	r5, ip
 80011d6:	2a08      	cmp	r2, #8
 80011d8:	d10b      	bne.n	80011f2 <_printf_i+0x112>
 80011da:	6823      	ldr	r3, [r4, #0]
 80011dc:	07db      	lsls	r3, r3, #31
 80011de:	d508      	bpl.n	80011f2 <_printf_i+0x112>
 80011e0:	6923      	ldr	r3, [r4, #16]
 80011e2:	6862      	ldr	r2, [r4, #4]
 80011e4:	429a      	cmp	r2, r3
 80011e6:	bfde      	ittt	le
 80011e8:	2330      	movle	r3, #48	; 0x30
 80011ea:	f805 3c01 	strble.w	r3, [r5, #-1]
 80011ee:	f105 35ff 	addle.w	r5, r5, #4294967295
 80011f2:	ebac 0305 	sub.w	r3, ip, r5
 80011f6:	6123      	str	r3, [r4, #16]
 80011f8:	f8cd 8000 	str.w	r8, [sp]
 80011fc:	463b      	mov	r3, r7
 80011fe:	aa03      	add	r2, sp, #12
 8001200:	4621      	mov	r1, r4
 8001202:	4630      	mov	r0, r6
 8001204:	f7ff fef6 	bl	8000ff4 <_printf_common>
 8001208:	3001      	adds	r0, #1
 800120a:	d14d      	bne.n	80012a8 <_printf_i+0x1c8>
 800120c:	f04f 30ff 	mov.w	r0, #4294967295
 8001210:	b005      	add	sp, #20
 8001212:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001216:	4839      	ldr	r0, [pc, #228]	; (80012fc <_printf_i+0x21c>)
 8001218:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 800121c:	6813      	ldr	r3, [r2, #0]
 800121e:	6821      	ldr	r1, [r4, #0]
 8001220:	1d1d      	adds	r5, r3, #4
 8001222:	681b      	ldr	r3, [r3, #0]
 8001224:	6015      	str	r5, [r2, #0]
 8001226:	060a      	lsls	r2, r1, #24
 8001228:	d50b      	bpl.n	8001242 <_printf_i+0x162>
 800122a:	07ca      	lsls	r2, r1, #31
 800122c:	bf44      	itt	mi
 800122e:	f041 0120 	orrmi.w	r1, r1, #32
 8001232:	6021      	strmi	r1, [r4, #0]
 8001234:	b91b      	cbnz	r3, 800123e <_printf_i+0x15e>
 8001236:	6822      	ldr	r2, [r4, #0]
 8001238:	f022 0220 	bic.w	r2, r2, #32
 800123c:	6022      	str	r2, [r4, #0]
 800123e:	2210      	movs	r2, #16
 8001240:	e7b7      	b.n	80011b2 <_printf_i+0xd2>
 8001242:	064d      	lsls	r5, r1, #25
 8001244:	bf48      	it	mi
 8001246:	b29b      	uxthmi	r3, r3
 8001248:	e7ef      	b.n	800122a <_printf_i+0x14a>
 800124a:	4665      	mov	r5, ip
 800124c:	fbb3 f1f2 	udiv	r1, r3, r2
 8001250:	fb02 3311 	mls	r3, r2, r1, r3
 8001254:	5cc3      	ldrb	r3, [r0, r3]
 8001256:	f805 3d01 	strb.w	r3, [r5, #-1]!
 800125a:	460b      	mov	r3, r1
 800125c:	2900      	cmp	r1, #0
 800125e:	d1f5      	bne.n	800124c <_printf_i+0x16c>
 8001260:	e7b9      	b.n	80011d6 <_printf_i+0xf6>
 8001262:	6813      	ldr	r3, [r2, #0]
 8001264:	6825      	ldr	r5, [r4, #0]
 8001266:	6961      	ldr	r1, [r4, #20]
 8001268:	1d18      	adds	r0, r3, #4
 800126a:	6010      	str	r0, [r2, #0]
 800126c:	0628      	lsls	r0, r5, #24
 800126e:	681b      	ldr	r3, [r3, #0]
 8001270:	d501      	bpl.n	8001276 <_printf_i+0x196>
 8001272:	6019      	str	r1, [r3, #0]
 8001274:	e002      	b.n	800127c <_printf_i+0x19c>
 8001276:	066a      	lsls	r2, r5, #25
 8001278:	d5fb      	bpl.n	8001272 <_printf_i+0x192>
 800127a:	8019      	strh	r1, [r3, #0]
 800127c:	2300      	movs	r3, #0
 800127e:	6123      	str	r3, [r4, #16]
 8001280:	4665      	mov	r5, ip
 8001282:	e7b9      	b.n	80011f8 <_printf_i+0x118>
 8001284:	6813      	ldr	r3, [r2, #0]
 8001286:	1d19      	adds	r1, r3, #4
 8001288:	6011      	str	r1, [r2, #0]
 800128a:	681d      	ldr	r5, [r3, #0]
 800128c:	6862      	ldr	r2, [r4, #4]
 800128e:	2100      	movs	r1, #0
 8001290:	4628      	mov	r0, r5
 8001292:	f7fe ffad 	bl	80001f0 <memchr>
 8001296:	b108      	cbz	r0, 800129c <_printf_i+0x1bc>
 8001298:	1b40      	subs	r0, r0, r5
 800129a:	6060      	str	r0, [r4, #4]
 800129c:	6863      	ldr	r3, [r4, #4]
 800129e:	6123      	str	r3, [r4, #16]
 80012a0:	2300      	movs	r3, #0
 80012a2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80012a6:	e7a7      	b.n	80011f8 <_printf_i+0x118>
 80012a8:	6923      	ldr	r3, [r4, #16]
 80012aa:	462a      	mov	r2, r5
 80012ac:	4639      	mov	r1, r7
 80012ae:	4630      	mov	r0, r6
 80012b0:	47c0      	blx	r8
 80012b2:	3001      	adds	r0, #1
 80012b4:	d0aa      	beq.n	800120c <_printf_i+0x12c>
 80012b6:	6823      	ldr	r3, [r4, #0]
 80012b8:	079b      	lsls	r3, r3, #30
 80012ba:	d413      	bmi.n	80012e4 <_printf_i+0x204>
 80012bc:	68e0      	ldr	r0, [r4, #12]
 80012be:	9b03      	ldr	r3, [sp, #12]
 80012c0:	4298      	cmp	r0, r3
 80012c2:	bfb8      	it	lt
 80012c4:	4618      	movlt	r0, r3
 80012c6:	e7a3      	b.n	8001210 <_printf_i+0x130>
 80012c8:	2301      	movs	r3, #1
 80012ca:	464a      	mov	r2, r9
 80012cc:	4639      	mov	r1, r7
 80012ce:	4630      	mov	r0, r6
 80012d0:	47c0      	blx	r8
 80012d2:	3001      	adds	r0, #1
 80012d4:	d09a      	beq.n	800120c <_printf_i+0x12c>
 80012d6:	3501      	adds	r5, #1
 80012d8:	68e3      	ldr	r3, [r4, #12]
 80012da:	9a03      	ldr	r2, [sp, #12]
 80012dc:	1a9b      	subs	r3, r3, r2
 80012de:	42ab      	cmp	r3, r5
 80012e0:	dcf2      	bgt.n	80012c8 <_printf_i+0x1e8>
 80012e2:	e7eb      	b.n	80012bc <_printf_i+0x1dc>
 80012e4:	2500      	movs	r5, #0
 80012e6:	f104 0919 	add.w	r9, r4, #25
 80012ea:	e7f5      	b.n	80012d8 <_printf_i+0x1f8>
 80012ec:	2b00      	cmp	r3, #0
 80012ee:	d1ac      	bne.n	800124a <_printf_i+0x16a>
 80012f0:	7803      	ldrb	r3, [r0, #0]
 80012f2:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80012f6:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80012fa:	e76c      	b.n	80011d6 <_printf_i+0xf6>
 80012fc:	08001565 	.word	0x08001565
 8001300:	08001576 	.word	0x08001576

08001304 <_sbrk_r>:
 8001304:	b538      	push	{r3, r4, r5, lr}
 8001306:	4c06      	ldr	r4, [pc, #24]	; (8001320 <_sbrk_r+0x1c>)
 8001308:	2300      	movs	r3, #0
 800130a:	4605      	mov	r5, r0
 800130c:	4608      	mov	r0, r1
 800130e:	6023      	str	r3, [r4, #0]
 8001310:	f7ff f8e8 	bl	80004e4 <_sbrk>
 8001314:	1c43      	adds	r3, r0, #1
 8001316:	d102      	bne.n	800131e <_sbrk_r+0x1a>
 8001318:	6823      	ldr	r3, [r4, #0]
 800131a:	b103      	cbz	r3, 800131e <_sbrk_r+0x1a>
 800131c:	602b      	str	r3, [r5, #0]
 800131e:	bd38      	pop	{r3, r4, r5, pc}
 8001320:	2000008c 	.word	0x2000008c

08001324 <__sread>:
 8001324:	b510      	push	{r4, lr}
 8001326:	460c      	mov	r4, r1
 8001328:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800132c:	f000 f896 	bl	800145c <_read_r>
 8001330:	2800      	cmp	r0, #0
 8001332:	bfab      	itete	ge
 8001334:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8001336:	89a3      	ldrhlt	r3, [r4, #12]
 8001338:	181b      	addge	r3, r3, r0
 800133a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800133e:	bfac      	ite	ge
 8001340:	6563      	strge	r3, [r4, #84]	; 0x54
 8001342:	81a3      	strhlt	r3, [r4, #12]
 8001344:	bd10      	pop	{r4, pc}

08001346 <__swrite>:
 8001346:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800134a:	461f      	mov	r7, r3
 800134c:	898b      	ldrh	r3, [r1, #12]
 800134e:	05db      	lsls	r3, r3, #23
 8001350:	4605      	mov	r5, r0
 8001352:	460c      	mov	r4, r1
 8001354:	4616      	mov	r6, r2
 8001356:	d505      	bpl.n	8001364 <__swrite+0x1e>
 8001358:	2302      	movs	r3, #2
 800135a:	2200      	movs	r2, #0
 800135c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001360:	f000 f868 	bl	8001434 <_lseek_r>
 8001364:	89a3      	ldrh	r3, [r4, #12]
 8001366:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800136a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800136e:	81a3      	strh	r3, [r4, #12]
 8001370:	4632      	mov	r2, r6
 8001372:	463b      	mov	r3, r7
 8001374:	4628      	mov	r0, r5
 8001376:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800137a:	f000 b817 	b.w	80013ac <_write_r>

0800137e <__sseek>:
 800137e:	b510      	push	{r4, lr}
 8001380:	460c      	mov	r4, r1
 8001382:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001386:	f000 f855 	bl	8001434 <_lseek_r>
 800138a:	1c43      	adds	r3, r0, #1
 800138c:	89a3      	ldrh	r3, [r4, #12]
 800138e:	bf15      	itete	ne
 8001390:	6560      	strne	r0, [r4, #84]	; 0x54
 8001392:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001396:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800139a:	81a3      	strheq	r3, [r4, #12]
 800139c:	bf18      	it	ne
 800139e:	81a3      	strhne	r3, [r4, #12]
 80013a0:	bd10      	pop	{r4, pc}

080013a2 <__sclose>:
 80013a2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013a6:	f000 b813 	b.w	80013d0 <_close_r>
	...

080013ac <_write_r>:
 80013ac:	b538      	push	{r3, r4, r5, lr}
 80013ae:	4c07      	ldr	r4, [pc, #28]	; (80013cc <_write_r+0x20>)
 80013b0:	4605      	mov	r5, r0
 80013b2:	4608      	mov	r0, r1
 80013b4:	4611      	mov	r1, r2
 80013b6:	2200      	movs	r2, #0
 80013b8:	6022      	str	r2, [r4, #0]
 80013ba:	461a      	mov	r2, r3
 80013bc:	f7ff f845 	bl	800044a <_write>
 80013c0:	1c43      	adds	r3, r0, #1
 80013c2:	d102      	bne.n	80013ca <_write_r+0x1e>
 80013c4:	6823      	ldr	r3, [r4, #0]
 80013c6:	b103      	cbz	r3, 80013ca <_write_r+0x1e>
 80013c8:	602b      	str	r3, [r5, #0]
 80013ca:	bd38      	pop	{r3, r4, r5, pc}
 80013cc:	2000008c 	.word	0x2000008c

080013d0 <_close_r>:
 80013d0:	b538      	push	{r3, r4, r5, lr}
 80013d2:	4c06      	ldr	r4, [pc, #24]	; (80013ec <_close_r+0x1c>)
 80013d4:	2300      	movs	r3, #0
 80013d6:	4605      	mov	r5, r0
 80013d8:	4608      	mov	r0, r1
 80013da:	6023      	str	r3, [r4, #0]
 80013dc:	f7ff f851 	bl	8000482 <_close>
 80013e0:	1c43      	adds	r3, r0, #1
 80013e2:	d102      	bne.n	80013ea <_close_r+0x1a>
 80013e4:	6823      	ldr	r3, [r4, #0]
 80013e6:	b103      	cbz	r3, 80013ea <_close_r+0x1a>
 80013e8:	602b      	str	r3, [r5, #0]
 80013ea:	bd38      	pop	{r3, r4, r5, pc}
 80013ec:	2000008c 	.word	0x2000008c

080013f0 <_fstat_r>:
 80013f0:	b538      	push	{r3, r4, r5, lr}
 80013f2:	4c07      	ldr	r4, [pc, #28]	; (8001410 <_fstat_r+0x20>)
 80013f4:	2300      	movs	r3, #0
 80013f6:	4605      	mov	r5, r0
 80013f8:	4608      	mov	r0, r1
 80013fa:	4611      	mov	r1, r2
 80013fc:	6023      	str	r3, [r4, #0]
 80013fe:	f7ff f84b 	bl	8000498 <_fstat>
 8001402:	1c43      	adds	r3, r0, #1
 8001404:	d102      	bne.n	800140c <_fstat_r+0x1c>
 8001406:	6823      	ldr	r3, [r4, #0]
 8001408:	b103      	cbz	r3, 800140c <_fstat_r+0x1c>
 800140a:	602b      	str	r3, [r5, #0]
 800140c:	bd38      	pop	{r3, r4, r5, pc}
 800140e:	bf00      	nop
 8001410:	2000008c 	.word	0x2000008c

08001414 <_isatty_r>:
 8001414:	b538      	push	{r3, r4, r5, lr}
 8001416:	4c06      	ldr	r4, [pc, #24]	; (8001430 <_isatty_r+0x1c>)
 8001418:	2300      	movs	r3, #0
 800141a:	4605      	mov	r5, r0
 800141c:	4608      	mov	r0, r1
 800141e:	6023      	str	r3, [r4, #0]
 8001420:	f7ff f849 	bl	80004b6 <_isatty>
 8001424:	1c43      	adds	r3, r0, #1
 8001426:	d102      	bne.n	800142e <_isatty_r+0x1a>
 8001428:	6823      	ldr	r3, [r4, #0]
 800142a:	b103      	cbz	r3, 800142e <_isatty_r+0x1a>
 800142c:	602b      	str	r3, [r5, #0]
 800142e:	bd38      	pop	{r3, r4, r5, pc}
 8001430:	2000008c 	.word	0x2000008c

08001434 <_lseek_r>:
 8001434:	b538      	push	{r3, r4, r5, lr}
 8001436:	4c07      	ldr	r4, [pc, #28]	; (8001454 <_lseek_r+0x20>)
 8001438:	4605      	mov	r5, r0
 800143a:	4608      	mov	r0, r1
 800143c:	4611      	mov	r1, r2
 800143e:	2200      	movs	r2, #0
 8001440:	6022      	str	r2, [r4, #0]
 8001442:	461a      	mov	r2, r3
 8001444:	f7ff f841 	bl	80004ca <_lseek>
 8001448:	1c43      	adds	r3, r0, #1
 800144a:	d102      	bne.n	8001452 <_lseek_r+0x1e>
 800144c:	6823      	ldr	r3, [r4, #0]
 800144e:	b103      	cbz	r3, 8001452 <_lseek_r+0x1e>
 8001450:	602b      	str	r3, [r5, #0]
 8001452:	bd38      	pop	{r3, r4, r5, pc}
 8001454:	2000008c 	.word	0x2000008c

08001458 <__malloc_lock>:
 8001458:	4770      	bx	lr

0800145a <__malloc_unlock>:
 800145a:	4770      	bx	lr

0800145c <_read_r>:
 800145c:	b538      	push	{r3, r4, r5, lr}
 800145e:	4c07      	ldr	r4, [pc, #28]	; (800147c <_read_r+0x20>)
 8001460:	4605      	mov	r5, r0
 8001462:	4608      	mov	r0, r1
 8001464:	4611      	mov	r1, r2
 8001466:	2200      	movs	r2, #0
 8001468:	6022      	str	r2, [r4, #0]
 800146a:	461a      	mov	r2, r3
 800146c:	f7fe ffd0 	bl	8000410 <_read>
 8001470:	1c43      	adds	r3, r0, #1
 8001472:	d102      	bne.n	800147a <_read_r+0x1e>
 8001474:	6823      	ldr	r3, [r4, #0]
 8001476:	b103      	cbz	r3, 800147a <_read_r+0x1e>
 8001478:	602b      	str	r3, [r5, #0]
 800147a:	bd38      	pop	{r3, r4, r5, pc}
 800147c:	2000008c 	.word	0x2000008c

08001480 <_init>:
 8001480:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001482:	bf00      	nop
 8001484:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001486:	bc08      	pop	{r3}
 8001488:	469e      	mov	lr, r3
 800148a:	4770      	bx	lr

0800148c <_fini>:
 800148c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800148e:	bf00      	nop
 8001490:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001492:	bc08      	pop	{r3}
 8001494:	469e      	mov	lr, r3
 8001496:	4770      	bx	lr
